From: <postbox@lisdatacenter.org>
Subject: job 1362420 py
Date: June 20, 2025 at 10:48:13 AM CDT
To: <fsolt@mac.com>

############################### NOTICE TO USERS ###############################
                                                                        Use of the data in the LUXEMBOURG INCOME STUDY DATABASES is governed by regulations which do not allow copying or further distribution of the survey microdata.                                                     

Anyone violating these regulations will lose all privileges to the databases and may be subject to prosecution under the law. In addition, any attempt to circumvent the LIS processing system or unauthorized entry into the LIS computing system will result in prosecution.             
All papers written using the LUXEMBOURG INCOME STUDY DATABASES must be  submitted for entry into the Working Papers Series. Users of the LIS or LWS microdata are required to cite the data source in their list of references.                   

Please consult our web site for more information at WWW.LISDATACENTER.ORG
                                                                        
############################### NOTICE TO USERS ###############################

> 
> 
> 
> 
> 
> 
> options(echo=FALSE, encoding="UTF-8")
Loading required package: readstata13
> 
> 
> options(error = expression(q('no')))
> ## Define functions 
> gini <- function(df, x) { 
+   df1 <- df[!is.na(df[[x]]), ] 
+   x <- as.vector(df1[[x]]) 
+   weight <- df1$wt 
+    
+   ox <- order(x) 
+   x <- as.vector(x)[ox] 
+   weight <- as.vector(weight)[ox] / sum(weight)  
+   p <- cumsum(weight) 
+   nu <- cumsum(weight * x) 
+   n <- length(nu) 
+   nu <- nu / nu[n] 
+   res <- round((sum(nu[-1] * p[-n]) - sum(nu[-n] * p[-1])), digits = 4) 
+   return(res) 
+ } 
>  
> wNtile <- function(var, wgt, split) { 
+   x <- var[order(var)] 
+   y <- wgt[order(var)] 
+   z <- cumsum(y) / sum(y) 
+   cop <- rep(NA, length(split))  
+   for (i in 1:length(cop)) { 
+     cop[i] <- x[Find(function(h) z[h] > split[i], seq_along(z))] 
+   } 
+   return(cop) 
+ } 
>  
> topBottom <- function(var, botline, topline) { 
+   tb <- ifelse(var < botline, botline, var) 
+   tb <- ifelse(tb > topline, topline, tb) 
+   return(tb) 
+ } 
>  
> setups <- function(df) { 
+   botline <- 0 
+   topline <- exp(log(wNtile(df$dhi, df$hpopwgt, 0.75)) + 3 * (log(wNtile(df$dhi, df$hpopwgt, 0.75)) - log(wNtile(df$dhi, df$hpopwgt, 0.25)))) 
+   df$oecdm <- 1 + .5 * (df$nhhmem - df$nhhmem13 - 1) + .3 * df$nhhmem13 
+   df$ae <- 1 + .7 * (df$nhhmem - df$nhhmem13 - 1) + .5 * df$nhhmem13 
+    
+   df$disp_hh <- topBottom(df$dhi, botline, topline) 
+   df$disp_sqrt <- df$disp_hh / (df$nhhmem ^ 0.5) 
+   df$disp_pc <- df$disp_hh / df$nhhmem 
+   df$disp_oecdm <- df$disp_hh / df$oecdm 
+   df$disp_ae <- df$disp_hh / df$ae 
+    
+   df$gross_hh <- topBottom(df$hitotal, botline, topline) 
+   df$gross_sqrt <- df$gross_hh / (df$nhhmem ^ 0.5) 
+   df$gross_pc <- df$gross_hh / df$nhhmem 
+   df$gross_oecdm <- df$gross_hh / df$oecdm 
+   df$gross_ae <- df$gross_hh / df$ae 
+    
+   df$market_hh <- topBottom(ifelse(!is.na(df$hiprivate), (df$hifactor + df$hiprivate), df$hifactor), botline, topline) 
+   df$market_sqrt <- df$market_hh / (df$nhhmem ^ 0.5) 
+   df$market_pc <- df$market_hh / df$nhhmem 
+   df$market_oecdm <- df$market_hh / df$oecdm 
+   df$market_ae <- df$market_hh / df$ae 
+    
+   df$con_hh <- topBottom(df$hcexp, botline, topline) 
+   df$con_sqrt <- df$con_hh / (df$nhhmem ^ 0.5) 
+   df$con_pc <- df$con_hh / df$nhhmem 
+   df$con_oecdm <- df$con_hh / df$oecdm 
+   df$con_ae <- df$con_hh / df$ae 
+    
+   return(df) 
+ } 
>  
> boot_gini_se <- function(data, var, reps=100) { 
+   data <- data[!is.na(data[[var]]), ] 
+   resamples <- lapply(1:reps, function(i) dplyr::sample_n(data, size = nrow(data), replace=TRUE)) 
+   r_stat <- lapply(resamples, function(x) gini(x, var)) 
+   std_err <- round(sqrt(var(unlist(r_stat))), digits = 4) 
+   return(std_err)    
+ } 
>  
> # For testing at home: 
> # read.LIS <- function(data_file, labels, vars) { 
> #   require(dplyr) 
> #   data_file <- stringr::str_replace(data_file, "h", "ih.dta") 
> #   df <- haven::read_dta(data_file)[, vars] 
> #   if (!labels) { 
> #     df <- df %>% dplyr::mutate_all(list(as.numeric)) 
> #   } 
> #   return(df) 
> # } 
>  
> get_ginis <- function(cc, reps = 100) { 
+   set.seed(324) 
+   ccs <- c("au", "at", "be", "br", "ca", "ci", "cl", "cn", "co", "cz", "dk",  
+            "do", "eg", "ee", "fi", "fr", "de", "ge", "gr", "gt", "hu", "is", "in", 
+            "ie", "il", "it", "jp", "lt", "lu", "ml", "mx", "nl", "no", "pa", "py",  
+            "pe", "pl", "ps", "ro", "ru", "rs", "sk", "si", "za", "kr", "es", "se",  
+            "ch", "tw", "uk", "us", "uy", "vn", 
+            "iq", "jo", "ps", "so", "sd", "tn")  
+   cc <- tolower(cc) 
+   if (!cc %in% ccs) { 
+     stop("Please specify a LIS country in iso2c format") 
+   } 
+   last_year_yy <- as.numeric(format(Sys.Date(), "%Y")) - 2001 
+   yy <- as.character(c(c(63:99), paste0("0", 0:9), c(10:last_year_yy))) 
+  
+   datasets <- paste0(rep(cc, each = length(yy)), rep(yy, times = length(cc)), "h") 
+   vars <- c("dhi", "hitotal", "hifactor", "hiprivate", "hcexp", "hpopwgt", "nhhmem", "nhhmem13", "grossnet") 
+  
+   v <- c("market_hh", "market_sqrt", "market_pc", "market_oecdm", "market_ae", 
+          "gross_hh", "gross_sqrt", "gross_pc", "gross_oecdm", "gross_ae", 
+          "disp_hh", "disp_sqrt", "disp_pc", "disp_oecdm", "disp_ae", 
+          "con_hh", "con_sqrt", "con_pc", "con_oecdm", "con_ae") 
+    
+   for (ccyy in datasets) { 
+     cat("") 
+     df <- try(read.LIS(ccyy, labels = FALSE, vars = vars), silent = TRUE) 
+     if (!class(df)[1] == "try-error") { 
+       mean_dhi <- mean(df$dhi, na.rm = TRUE) 
+       if (!is.nan(mean_dhi) & !mean_dhi == 0) { 
+         df <- setups(df) 
+         for (var in v) { 
+           if (grepl("hh", var)) { 
+             df$wt <- df$hpopwgt 
+           } else { 
+             df$wt <- df$hpopwgt * df$nhhmem 
+           } 
+           if (!is.na(mean(df[[var]], na.rm = TRUE))) { 
+             cat(paste(ccyy,  
+                       var,  
+                       gini(df, var), 
+                       boot_gini_se(df, var, reps = reps), 
+                       df$grossnet[1], 
+                       sep = ","), sep = "\n") 
+           } 
+         } 
+       } 
+     } 
+   } 
+ } 
>  
> # Call 
> get_ginis("py") 
[1] "Loading dataset py97h..."
py97h,market_hh,0.5444,0.0076,320
py97h,market_sqrt,0.5418,0.0103,320
py97h,market_pc,0.5663,0.0081,320
py97h,market_oecdm,0.5425,0.0084,320
py97h,market_ae,0.5504,0.0091,320
py97h,gross_hh,0.5402,0.009,320
py97h,gross_sqrt,0.54,0.0095,320
py97h,gross_pc,0.565,0.0084,320
py97h,gross_oecdm,0.5403,0.0089,320
py97h,gross_ae,0.5485,0.0085,320
py97h,disp_hh,0.5402,0.0086,320
py97h,disp_sqrt,0.54,0.0091,320
py97h,disp_pc,0.565,0.0099,320
py97h,disp_oecdm,0.5403,0.008,320
py97h,disp_ae,0.5485,0.0097,320
py97h,con_hh,NaN,NA,320
py97h,con_sqrt,NaN,NA,320
py97h,con_pc,NaN,NA,320
py97h,con_oecdm,NaN,NA,320
py97h,con_ae,NaN,NA,320
[1] "Loading dataset py99h..."
py99h,market_hh,0.5393,0.0083,200
py99h,market_sqrt,0.5307,0.0079,200
py99h,market_pc,0.5601,0.0093,200
py99h,market_oecdm,0.5319,0.0084,200
py99h,market_ae,0.5413,0.0088,200
py99h,gross_hh,0.5337,0.0098,200
py99h,gross_sqrt,0.5293,0.0077,200
py99h,gross_pc,0.5594,0.0085,200
py99h,gross_oecdm,0.5302,0.0083,200
py99h,gross_ae,0.54,0.0096,200
py99h,disp_hh,0.5337,0.0082,200
py99h,disp_sqrt,0.5293,0.0096,200
py99h,disp_pc,0.5594,0.0082,200
py99h,disp_oecdm,0.5302,0.0085,200
py99h,disp_ae,0.54,0.0096,200
py99h,con_hh,NaN,NA,200
py99h,con_sqrt,NaN,NA,200
py99h,con_pc,NaN,NA,200
py99h,con_oecdm,NaN,NA,200
py99h,con_ae,NaN,NA,200
[1] "Loading dataset py00h..."
py00h,market_hh,0.5493,0.0103,320
py00h,market_sqrt,0.537,0.0096,320
py00h,market_pc,0.5698,0.0101,320
py00h,market_oecdm,0.5415,0.0095,320
py00h,market_ae,0.5514,0.0102,320
py00h,gross_hh,0.547,0.0104,320
py00h,gross_sqrt,0.5391,0.01,320
py00h,gross_pc,0.5726,0.0101,320
py00h,gross_oecdm,0.543,0.0092,320
py00h,gross_ae,0.5533,0.0089,320
py00h,disp_hh,0.547,0.0103,320
py00h,disp_sqrt,0.5391,0.0098,320
py00h,disp_pc,0.5726,0.0087,320
py00h,disp_oecdm,0.543,0.0096,320
py00h,disp_ae,0.5533,0.0095,320
py00h,con_hh,NaN,NA,320
py00h,con_sqrt,NaN,NA,320
py00h,con_pc,NaN,NA,320
py00h,con_oecdm,NaN,NA,320
py00h,con_ae,NaN,NA,320
[1] "Loading dataset py02h..."
py02h,market_hh,0.5656,0.0098,200
py02h,market_sqrt,0.5548,0.0139,200
py02h,market_pc,0.5772,0.0132,200
py02h,market_oecdm,0.5551,0.0127,200
py02h,market_ae,0.5623,0.0132,200
py02h,gross_hh,0.5623,0.0113,200
py02h,gross_sqrt,0.5556,0.0129,200
py02h,gross_pc,0.5791,0.0106,200
py02h,gross_oecdm,0.5557,0.0121,200
py02h,gross_ae,0.5634,0.0115,200
py02h,disp_hh,0.5623,0.0105,200
py02h,disp_sqrt,0.5556,0.0121,200
py02h,disp_pc,0.5791,0.0117,200
py02h,disp_oecdm,0.5557,0.012,200
py02h,disp_ae,0.5634,0.0124,200
py02h,con_hh,NaN,NA,200
py02h,con_sqrt,NaN,NA,200
py02h,con_pc,NaN,NA,200
py02h,con_oecdm,NaN,NA,200
py02h,con_ae,NaN,NA,200
[1] "Loading dataset py03h..."
py03h,market_hh,0.5531,0.0069,200
py03h,market_sqrt,0.5406,0.0075,200
py03h,market_pc,0.5689,0.0084,200
py03h,market_oecdm,0.543,0.0087,200
py03h,market_ae,0.5519,0.0085,200
py03h,gross_hh,0.5486,0.0075,200
py03h,gross_sqrt,0.5389,0.0082,200
py03h,gross_pc,0.5679,0.0073,200
py03h,gross_oecdm,0.541,0.0083,200
py03h,gross_ae,0.5502,0.0075,200
py03h,disp_hh,0.5486,0.0088,200
py03h,disp_sqrt,0.5389,0.0079,200
py03h,disp_pc,0.5679,0.0077,200
py03h,disp_oecdm,0.541,0.007,200
py03h,disp_ae,0.5502,0.0085,200
py03h,con_hh,NaN,NA,200
py03h,con_sqrt,NaN,NA,200
py03h,con_pc,NaN,NA,200
py03h,con_oecdm,NaN,NA,200
py03h,con_ae,NaN,NA,200
[1] "Loading dataset py04h..."
py04h,market_hh,0.5381,0.0083,320
py04h,market_sqrt,0.5152,0.0097,320
py04h,market_pc,0.5494,0.0099,320
py04h,market_oecdm,0.5207,0.0103,320
py04h,market_ae,0.5307,0.0091,320
py04h,gross_hh,0.53,0.0091,320
py04h,gross_sqrt,0.51,0.0089,320
py04h,gross_pc,0.5456,0.0091,320
py04h,gross_oecdm,0.5155,0.0089,320
py04h,gross_ae,0.526,0.0092,320
py04h,disp_hh,0.53,0.0084,320
py04h,disp_sqrt,0.51,0.0094,320
py04h,disp_pc,0.5456,0.0077,320
py04h,disp_oecdm,0.5155,0.0097,320
py04h,disp_ae,0.526,0.0085,320
py04h,con_hh,NaN,NA,320
py04h,con_sqrt,NaN,NA,320
py04h,con_pc,NaN,NA,320
py04h,con_oecdm,NaN,NA,320
py04h,con_ae,NaN,NA,320
[1] "Loading dataset py05h..."
py05h,market_hh,0.5279,0.0144,320
py05h,market_sqrt,0.5082,0.0135,320
py05h,market_pc,0.5389,0.0118,320
py05h,market_oecdm,0.5129,0.0138,320
py05h,market_ae,0.5219,0.0122,320
py05h,gross_hh,0.5197,0.0129,320
py05h,gross_sqrt,0.5029,0.0118,320
py05h,gross_pc,0.5343,0.0121,320
py05h,gross_oecdm,0.5071,0.0136,320
py05h,gross_ae,0.5164,0.0132,320
py05h,disp_hh,0.5197,0.0124,320
py05h,disp_sqrt,0.5029,0.0118,320
py05h,disp_pc,0.5343,0.013,320
py05h,disp_oecdm,0.5071,0.0135,320
py05h,disp_ae,0.5164,0.0139,320
py05h,con_hh,NaN,NA,320
py05h,con_sqrt,NaN,NA,320
py05h,con_pc,NaN,NA,320
py05h,con_oecdm,NaN,NA,320
py05h,con_ae,NaN,NA,320
[1] "Loading dataset py06h..."
py06h,market_hh,0.5191,0.0091,320
py06h,market_sqrt,0.5089,0.0093,320
py06h,market_pc,0.5371,0.0098,320
py06h,market_oecdm,0.5119,0.0093,320
py06h,market_ae,0.5204,0.0096,320
py06h,gross_hh,0.5102,0.0086,320
py06h,gross_sqrt,0.5045,0.01,320
py06h,gross_pc,0.5347,0.0093,320
py06h,gross_oecdm,0.5075,0.0098,320
py06h,gross_ae,0.5168,0.0094,320
py06h,disp_hh,0.5102,0.0092,320
py06h,disp_sqrt,0.5045,0.0093,320
py06h,disp_pc,0.5347,0.0085,320
py06h,disp_oecdm,0.5075,0.0085,320
py06h,disp_ae,0.5168,0.0093,320
py06h,con_hh,NaN,NA,320
py06h,con_sqrt,NaN,NA,320
py06h,con_pc,NaN,NA,320
py06h,con_oecdm,NaN,NA,320
py06h,con_ae,NaN,NA,320
[1] "Loading dataset py07h..."
py07h,market_hh,0.5249,0.0125,320
py07h,market_sqrt,0.5069,0.0105,320
py07h,market_pc,0.5367,0.011,320
py07h,market_oecdm,0.5106,0.0104,320
py07h,market_ae,0.5195,0.0123,320
py07h,gross_hh,0.5192,0.0112,320
py07h,gross_sqrt,0.5041,0.0112,320
py07h,gross_pc,0.5349,0.0106,320
py07h,gross_oecdm,0.5074,0.0114,320
py07h,gross_ae,0.5167,0.0095,320
py07h,disp_hh,0.5192,0.0112,320
py07h,disp_sqrt,0.5041,0.0103,320
py07h,disp_pc,0.5349,0.0108,320
py07h,disp_oecdm,0.5074,0.0106,320
py07h,disp_ae,0.5167,0.0103,320
py07h,con_hh,NaN,NA,320
py07h,con_sqrt,NaN,NA,320
py07h,con_pc,NaN,NA,320
py07h,con_oecdm,NaN,NA,320
py07h,con_ae,NaN,NA,320
[1] "Loading dataset py08h..."
py08h,market_hh,0.5074,0.0089,320
py08h,market_sqrt,0.4922,0.0104,320
py08h,market_pc,0.5253,0.011,320
py08h,market_oecdm,0.4966,0.0108,320
py08h,market_ae,0.5065,0.0111,320
py08h,gross_hh,0.4991,0.0094,320
py08h,gross_sqrt,0.4879,0.0086,320
py08h,gross_pc,0.5233,0.0091,320
py08h,gross_oecdm,0.4924,0.0104,320
py08h,gross_ae,0.5031,0.0099,320
py08h,disp_hh,0.4991,0.0096,320
py08h,disp_sqrt,0.4879,0.0094,320
py08h,disp_pc,0.5233,0.0099,320
py08h,disp_oecdm,0.4924,0.0092,320
py08h,disp_ae,0.5031,0.0094,320
py08h,con_hh,NaN,NA,320
py08h,con_sqrt,NaN,NA,320
py08h,con_pc,NaN,NA,320
py08h,con_oecdm,NaN,NA,320
py08h,con_ae,NaN,NA,320
[1] "Loading dataset py09h..."
py09h,market_hh,0.514,0.0118,320
py09h,market_sqrt,0.4954,0.0135,320
py09h,market_pc,0.5161,0.0129,320
py09h,market_oecdm,0.4942,0.0135,320
py09h,market_ae,0.5011,0.0132,320
py09h,gross_hh,0.5029,0.0127,320
py09h,gross_sqrt,0.4875,0.0163,320
py09h,gross_pc,0.5098,0.012,320
py09h,gross_oecdm,0.4861,0.0134,320
py09h,gross_ae,0.4936,0.0129,320
py09h,disp_hh,0.5029,0.0129,320
py09h,disp_sqrt,0.4875,0.0155,320
py09h,disp_pc,0.5098,0.0123,320
py09h,disp_oecdm,0.4861,0.0158,320
py09h,disp_ae,0.4936,0.0129,320
py09h,con_hh,NaN,NA,320
py09h,con_sqrt,NaN,NA,320
py09h,con_pc,NaN,NA,320
py09h,con_oecdm,NaN,NA,320
py09h,con_ae,NaN,NA,320
[1] "Loading dataset py10h..."
py10h,market_hh,0.525,0.009,320
py10h,market_sqrt,0.5072,0.0113,320
py10h,market_pc,0.5325,0.0099,320
py10h,market_oecdm,0.5094,0.0111,320
py10h,market_ae,0.517,0.0104,320
py10h,gross_hh,0.5182,0.0088,320
py10h,gross_sqrt,0.5017,0.0105,320
py10h,gross_pc,0.5283,0.0102,320
py10h,gross_oecdm,0.5036,0.0105,320
py10h,gross_ae,0.5118,0.01,320
py10h,disp_hh,0.5182,0.0101,320
py10h,disp_sqrt,0.5017,0.0102,320
py10h,disp_pc,0.5283,0.0103,320
py10h,disp_oecdm,0.5036,0.0132,320
py10h,disp_ae,0.5118,0.0105,320
py10h,con_hh,NaN,NA,320
py10h,con_sqrt,NaN,NA,320
py10h,con_pc,NaN,NA,320
py10h,con_oecdm,NaN,NA,320
py10h,con_ae,NaN,NA,320
[1] "Loading dataset py11h..."
py11h,market_hh,0.5481,0.0105,320
py11h,market_sqrt,0.5291,0.0095,320
py11h,market_pc,0.5513,0.0087,320
py11h,market_oecdm,0.5331,0.012,320
py11h,market_ae,0.5394,0.0112,320
py11h,gross_hh,0.5382,0.0114,320
py11h,gross_sqrt,0.5214,0.0102,320
py11h,gross_pc,0.5444,0.0112,320
py11h,gross_oecdm,0.5248,0.0128,320
py11h,gross_ae,0.5315,0.0109,320
py11h,disp_hh,0.5382,0.0117,320
py11h,disp_sqrt,0.5214,0.0107,320
py11h,disp_pc,0.5444,0.0106,320
py11h,disp_oecdm,0.5248,0.011,320
py11h,disp_ae,0.5315,0.0123,320
py11h,con_hh,NaN,NA,320
py11h,con_sqrt,NaN,NA,320
py11h,con_pc,NaN,NA,320
py11h,con_oecdm,NaN,NA,320
py11h,con_ae,NaN,NA,320
[1] "Loading dataset py12h..."
py12h,market_hh,0.5032,0.0078,320
py12h,market_sqrt,0.4777,0.0084,320
py12h,market_pc,0.5042,0.0086,320
py12h,market_oecdm,0.4785,0.0074,320
py12h,market_ae,0.487,0.0076,320
py12h,gross_hh,0.4949,0.0075,320
py12h,gross_sqrt,0.4709,0.0083,320
py12h,gross_pc,0.4974,0.0074,320
py12h,gross_oecdm,0.4707,0.008,320
py12h,gross_ae,0.4795,0.0076,320
py12h,disp_hh,0.4949,0.0079,320
py12h,disp_sqrt,0.4709,0.0072,320
py12h,disp_pc,0.4974,0.008,320
py12h,disp_oecdm,0.4707,0.0069,320
py12h,disp_ae,0.4795,0.0073,320
py12h,con_hh,NaN,NA,320
py12h,con_sqrt,NaN,NA,320
py12h,con_pc,NaN,NA,320
py12h,con_oecdm,NaN,NA,320
py12h,con_ae,NaN,NA,320
[1] "Loading dataset py13h..."
py13h,market_hh,0.5103,0.007,320
py13h,market_sqrt,0.4893,0.0085,320
py13h,market_pc,0.5153,0.0076,320
py13h,market_oecdm,0.4914,0.0088,320
py13h,market_ae,0.4994,0.0077,320
py13h,gross_hh,0.5,0.0082,320
py13h,gross_sqrt,0.4796,0.007,320
py13h,gross_pc,0.5057,0.0079,320
py13h,gross_oecdm,0.4809,0.0064,320
py13h,gross_ae,0.4892,0.0071,320
py13h,disp_hh,0.5,0.0065,320
py13h,disp_sqrt,0.4796,0.007,320
py13h,disp_pc,0.5057,0.0075,320
py13h,disp_oecdm,0.4809,0.0087,320
py13h,disp_ae,0.4892,0.0069,320
py13h,con_hh,NaN,NA,320
py13h,con_sqrt,NaN,NA,320
py13h,con_pc,NaN,NA,320
py13h,con_oecdm,NaN,NA,320
py13h,con_ae,NaN,NA,320
[1] "Loading dataset py14h..."
py14h,market_hh,0.5375,0.0101,320
py14h,market_sqrt,0.5143,0.0128,320
py14h,market_pc,0.5352,0.013,320
py14h,market_oecdm,0.5143,0.0128,320
py14h,market_ae,0.521,0.0123,320
py14h,gross_hh,0.5254,0.0118,320
py14h,gross_sqrt,0.5042,0.0127,320
py14h,gross_pc,0.5254,0.013,320
py14h,gross_oecdm,0.5037,0.0131,320
py14h,gross_ae,0.5105,0.0123,320
py14h,disp_hh,0.5254,0.0124,320
py14h,disp_sqrt,0.5042,0.0117,320
py14h,disp_pc,0.5254,0.0119,320
py14h,disp_oecdm,0.5037,0.0136,320
py14h,disp_ae,0.5105,0.0113,320
py14h,con_hh,NaN,NA,320
py14h,con_sqrt,NaN,NA,320
py14h,con_pc,NaN,NA,320
py14h,con_oecdm,NaN,NA,320
py14h,con_ae,NaN,NA,320
[1] "Loading dataset py15h..."
py15h,market_hh,0.5149,0.0088,320
py15h,market_sqrt,0.4944,0.0098,320
py15h,market_pc,0.5099,0.0089,320
py15h,market_oecdm,0.4911,0.0082,320
py15h,market_ae,0.4967,0.0076,320
py15h,gross_hh,0.5029,0.0096,320
py15h,gross_sqrt,0.4843,0.0093,320
py15h,gross_pc,0.5005,0.0079,320
py15h,gross_oecdm,0.4803,0.0088,320
py15h,gross_ae,0.4863,0.009,320
py15h,disp_hh,0.5029,0.0097,320
py15h,disp_sqrt,0.4843,0.009,320
py15h,disp_pc,0.5005,0.0076,320
py15h,disp_oecdm,0.4803,0.0084,320
py15h,disp_ae,0.4863,0.0078,320
py15h,con_hh,NaN,NA,320
py15h,con_sqrt,NaN,NA,320
py15h,con_pc,NaN,NA,320
py15h,con_oecdm,NaN,NA,320
py15h,con_ae,NaN,NA,320
[1] "Loading dataset py16h..."
py16h,market_hh,0.524,0.0074,320
py16h,market_sqrt,0.5014,0.0079,320
py16h,market_pc,0.5221,0.0079,320
py16h,market_oecdm,0.5012,0.0076,320
py16h,market_ae,0.5079,0.0075,320
py16h,gross_hh,0.5097,0.0063,320
py16h,gross_sqrt,0.4885,0.0083,320
py16h,gross_pc,0.5096,0.0075,320
py16h,gross_oecdm,0.4875,0.0083,320
py16h,gross_ae,0.4945,0.0083,320
py16h,disp_hh,0.5097,0.0072,320
py16h,disp_sqrt,0.4885,0.0087,320
py16h,disp_pc,0.5096,0.0059,320
py16h,disp_oecdm,0.4875,0.008,320
py16h,disp_ae,0.4945,0.0078,320
py16h,con_hh,NaN,NA,320
py16h,con_sqrt,NaN,NA,320
py16h,con_pc,NaN,NA,320
py16h,con_oecdm,NaN,NA,320
py16h,con_ae,NaN,NA,320
[1] "Loading dataset py17h..."
py17h,market_hh,0.5161,0.0103,320
py17h,market_sqrt,0.4922,0.0098,320
py17h,market_pc,0.5129,0.0091,320
py17h,market_oecdm,0.4922,0.0091,320
py17h,market_ae,0.4987,0.0101,320
py17h,gross_hh,0.5017,0.009,320
py17h,gross_sqrt,0.4792,0.0098,320
py17h,gross_pc,0.5002,0.0092,320
py17h,gross_oecdm,0.4785,0.0097,320
py17h,gross_ae,0.4851,0.0102,320
py17h,disp_hh,0.5017,0.0102,320
py17h,disp_sqrt,0.4792,0.01,320
py17h,disp_pc,0.5002,0.0094,320
py17h,disp_oecdm,0.4785,0.0092,320
py17h,disp_ae,0.4851,0.0108,320
py17h,con_hh,NaN,NA,320
py17h,con_sqrt,NaN,NA,320
py17h,con_pc,NaN,NA,320
py17h,con_oecdm,NaN,NA,320
py17h,con_ae,NaN,NA,320
[1] "Loading dataset py18h..."
py18h,market_hh,0.4975,0.008,320
py18h,market_sqrt,0.4711,0.0111,320
py18h,market_pc,0.4935,0.0091,320
py18h,market_oecdm,0.4709,0.0076,320
py18h,market_ae,0.4781,0.0084,320
py18h,gross_hh,0.4849,0.0078,320
py18h,gross_sqrt,0.4601,0.0067,320
py18h,gross_pc,0.4822,0.0073,320
py18h,gross_oecdm,0.4587,0.0076,320
py18h,gross_ae,0.466,0.0075,320
py18h,disp_hh,0.4849,0.0074,320
py18h,disp_sqrt,0.4601,0.0083,320
py18h,disp_pc,0.4822,0.0075,320
py18h,disp_oecdm,0.4587,0.0082,320
py18h,disp_ae,0.466,0.0078,320
py18h,con_hh,NaN,NA,320
py18h,con_sqrt,NaN,NA,320
py18h,con_pc,NaN,NA,320
py18h,con_oecdm,NaN,NA,320
py18h,con_ae,NaN,NA,320
[1] "Loading dataset py19h..."
py19h,market_hh,0.4924,0.0088,320
py19h,market_sqrt,0.4685,0.0087,320
py19h,market_pc,0.4908,0.0092,320
py19h,market_oecdm,0.4695,0.0101,320
py19h,market_ae,0.4763,0.0092,320
py19h,gross_hh,0.4798,0.0076,320
py19h,gross_sqrt,0.457,0.009,320
py19h,gross_pc,0.4795,0.0094,320
py19h,gross_oecdm,0.4571,0.0082,320
py19h,gross_ae,0.4641,0.0085,320
py19h,disp_hh,0.4798,0.0092,320
py19h,disp_sqrt,0.457,0.0092,320
py19h,disp_pc,0.4795,0.0096,320
py19h,disp_oecdm,0.4571,0.01,320
py19h,disp_ae,0.4641,0.0085,320
py19h,con_hh,NaN,NA,320
py19h,con_sqrt,NaN,NA,320
py19h,con_pc,NaN,NA,320
py19h,con_oecdm,NaN,NA,320
py19h,con_ae,NaN,NA,320
[1] "Loading dataset py20h..."
py20h,market_hh,0.483,0.0062,320
py20h,market_sqrt,0.4568,0.0064,320
py20h,market_pc,0.4812,0.0066,320
py20h,market_oecdm,0.4592,0.0068,320
py20h,market_ae,0.4664,0.0058,320
py20h,gross_hh,0.4682,0.0067,320
py20h,gross_sqrt,0.4434,0.0064,320
py20h,gross_pc,0.4668,0.0068,320
py20h,gross_oecdm,0.4443,0.0077,320
py20h,gross_ae,0.4515,0.0069,320
py20h,disp_hh,0.4682,0.0059,320
py20h,disp_sqrt,0.4434,0.0069,320
py20h,disp_pc,0.4668,0.0063,320
py20h,disp_oecdm,0.4443,0.0072,320
py20h,disp_ae,0.4515,0.0069,320
py20h,con_hh,NaN,NA,320
py20h,con_sqrt,NaN,NA,320
py20h,con_pc,NaN,NA,320
py20h,con_oecdm,NaN,NA,320
py20h,con_ae,NaN,NA,320
> 
> proc.time()
   user  system elapsed 
195.159   0.391 199.163 


