From: <postbox@lisdatacenter.org>
Subject: job 1362426 ro
Date: June 20, 2025 at 10:52:39 AM CDT
To: <fsolt@mac.com>

############################### NOTICE TO USERS ###############################
                                                                        Use of the data in the LUXEMBOURG INCOME STUDY DATABASES is governed by regulations which do not allow copying or further distribution of the survey microdata.                                                     

Anyone violating these regulations will lose all privileges to the databases and may be subject to prosecution under the law. In addition, any attempt to circumvent the LIS processing system or unauthorized entry into the LIS computing system will result in prosecution.             
All papers written using the LUXEMBOURG INCOME STUDY DATABASES must be  submitted for entry into the Working Papers Series. Users of the LIS or LWS microdata are required to cite the data source in their list of references.                   

Please consult our web site for more information at WWW.LISDATACENTER.ORG
                                                                        
############################### NOTICE TO USERS ###############################

> 
> 
> 
> 
> 
> 
> options(echo=FALSE, encoding="UTF-8")
Loading required package: readstata13
> 
> 
> options(error = expression(q('no')))
> ## Define functions 
> gini <- function(df, x) { 
+   df1 <- df[!is.na(df[[x]]), ] 
+   x <- as.vector(df1[[x]]) 
+   weight <- df1$wt 
+    
+   ox <- order(x) 
+   x <- as.vector(x)[ox] 
+   weight <- as.vector(weight)[ox] / sum(weight)  
+   p <- cumsum(weight) 
+   nu <- cumsum(weight * x) 
+   n <- length(nu) 
+   nu <- nu / nu[n] 
+   res <- round((sum(nu[-1] * p[-n]) - sum(nu[-n] * p[-1])), digits = 4) 
+   return(res) 
+ } 
>  
> wNtile <- function(var, wgt, split) { 
+   x <- var[order(var)] 
+   y <- wgt[order(var)] 
+   z <- cumsum(y) / sum(y) 
+   cop <- rep(NA, length(split))  
+   for (i in 1:length(cop)) { 
+     cop[i] <- x[Find(function(h) z[h] > split[i], seq_along(z))] 
+   } 
+   return(cop) 
+ } 
>  
> topBottom <- function(var, botline, topline) { 
+   tb <- ifelse(var < botline, botline, var) 
+   tb <- ifelse(tb > topline, topline, tb) 
+   return(tb) 
+ } 
>  
> setups <- function(df) { 
+   botline <- 0 
+   topline <- exp(log(wNtile(df$dhi, df$hpopwgt, 0.75)) + 3 * (log(wNtile(df$dhi, df$hpopwgt, 0.75)) - log(wNtile(df$dhi, df$hpopwgt, 0.25)))) 
+   df$oecdm <- 1 + .5 * (df$nhhmem - df$nhhmem13 - 1) + .3 * df$nhhmem13 
+   df$ae <- 1 + .7 * (df$nhhmem - df$nhhmem13 - 1) + .5 * df$nhhmem13 
+    
+   df$disp_hh <- topBottom(df$dhi, botline, topline) 
+   df$disp_sqrt <- df$disp_hh / (df$nhhmem ^ 0.5) 
+   df$disp_pc <- df$disp_hh / df$nhhmem 
+   df$disp_oecdm <- df$disp_hh / df$oecdm 
+   df$disp_ae <- df$disp_hh / df$ae 
+    
+   df$gross_hh <- topBottom(df$hitotal, botline, topline) 
+   df$gross_sqrt <- df$gross_hh / (df$nhhmem ^ 0.5) 
+   df$gross_pc <- df$gross_hh / df$nhhmem 
+   df$gross_oecdm <- df$gross_hh / df$oecdm 
+   df$gross_ae <- df$gross_hh / df$ae 
+    
+   df$market_hh <- topBottom(ifelse(!is.na(df$hiprivate), (df$hifactor + df$hiprivate), df$hifactor), botline, topline) 
+   df$market_sqrt <- df$market_hh / (df$nhhmem ^ 0.5) 
+   df$market_pc <- df$market_hh / df$nhhmem 
+   df$market_oecdm <- df$market_hh / df$oecdm 
+   df$market_ae <- df$market_hh / df$ae 
+    
+   df$con_hh <- topBottom(df$hcexp, botline, topline) 
+   df$con_sqrt <- df$con_hh / (df$nhhmem ^ 0.5) 
+   df$con_pc <- df$con_hh / df$nhhmem 
+   df$con_oecdm <- df$con_hh / df$oecdm 
+   df$con_ae <- df$con_hh / df$ae 
+    
+   return(df) 
+ } 
>  
> boot_gini_se <- function(data, var, reps=100) { 
+   data <- data[!is.na(data[[var]]), ] 
+   resamples <- lapply(1:reps, function(i) dplyr::sample_n(data, size = nrow(data), replace=TRUE)) 
+   r_stat <- lapply(resamples, function(x) gini(x, var)) 
+   std_err <- round(sqrt(var(unlist(r_stat))), digits = 4) 
+   return(std_err)    
+ } 
>  
> # For testing at home: 
> # read.LIS <- function(data_file, labels, vars) { 
> #   require(dplyr) 
> #   data_file <- stringr::str_replace(data_file, "h", "ih.dta") 
> #   df <- haven::read_dta(data_file)[, vars] 
> #   if (!labels) { 
> #     df <- df %>% dplyr::mutate_all(list(as.numeric)) 
> #   } 
> #   return(df) 
> # } 
>  
> get_ginis <- function(cc, reps = 100) { 
+   set.seed(324) 
+   ccs <- c("au", "at", "be", "br", "ca", "ci", "cl", "cn", "co", "cz", "dk",  
+            "do", "eg", "ee", "fi", "fr", "de", "ge", "gr", "gt", "hu", "is", "in", 
+            "ie", "il", "it", "jp", "lt", "lu", "ml", "mx", "nl", "no", "pa", "py",  
+            "pe", "pl", "ps", "ro", "ru", "rs", "sk", "si", "za", "kr", "es", "se",  
+            "ch", "tw", "uk", "us", "uy", "vn", 
+            "iq", "jo", "ps", "so", "sd", "tn")  
+   cc <- tolower(cc) 
+   if (!cc %in% ccs) { 
+     stop("Please specify a LIS country in iso2c format") 
+   } 
+   last_year_yy <- as.numeric(format(Sys.Date(), "%Y")) - 2001 
+   yy <- as.character(c(c(63:99), paste0("0", 0:9), c(10:last_year_yy))) 
+  
+   datasets <- paste0(rep(cc, each = length(yy)), rep(yy, times = length(cc)), "h") 
+   vars <- c("dhi", "hitotal", "hifactor", "hiprivate", "hcexp", "hpopwgt", "nhhmem", "nhhmem13", "grossnet") 
+  
+   v <- c("market_hh", "market_sqrt", "market_pc", "market_oecdm", "market_ae", 
+          "gross_hh", "gross_sqrt", "gross_pc", "gross_oecdm", "gross_ae", 
+          "disp_hh", "disp_sqrt", "disp_pc", "disp_oecdm", "disp_ae", 
+          "con_hh", "con_sqrt", "con_pc", "con_oecdm", "con_ae") 
+    
+   for (ccyy in datasets) { 
+     cat("") 
+     df <- try(read.LIS(ccyy, labels = FALSE, vars = vars), silent = TRUE) 
+     if (!class(df)[1] == "try-error") { 
+       mean_dhi <- mean(df$dhi, na.rm = TRUE) 
+       if (!is.nan(mean_dhi) & !mean_dhi == 0) { 
+         df <- setups(df) 
+         for (var in v) { 
+           if (grepl("hh", var)) { 
+             df$wt <- df$hpopwgt 
+           } else { 
+             df$wt <- df$hpopwgt * df$nhhmem 
+           } 
+           if (!is.na(mean(df[[var]], na.rm = TRUE))) { 
+             cat(paste(ccyy,  
+                       var,  
+                       gini(df, var), 
+                       boot_gini_se(df, var, reps = reps), 
+                       df$grossnet[1], 
+                       sep = ","), sep = "\n") 
+           } 
+         } 
+       } 
+     } 
+   } 
+ } 
>  
> # Call 
> get_ginis("ro") 
[1] "Loading dataset ro95h..."
ro95h,market_hh,0.4468,0.0021,100
ro95h,market_sqrt,0.3741,0.0024,100
ro95h,market_pc,0.391,0.0022,100
ro95h,market_oecdm,0.3774,0.002,100
ro95h,market_ae,0.3811,0.0022,100
ro95h,gross_hh,0.3547,0.0019,100
ro95h,gross_sqrt,0.296,0.0022,100
ro95h,gross_pc,0.316,0.0021,100
ro95h,gross_oecdm,0.2974,0.0021,100
ro95h,gross_ae,0.3018,0.0022,100
ro95h,disp_hh,0.3347,0.0022,100
ro95h,disp_sqrt,0.2797,0.0023,100
ro95h,disp_pc,0.3057,0.002,100
ro95h,disp_oecdm,0.2809,0.0022,100
ro95h,disp_ae,0.2872,0.002,100
ro95h,con_hh,0.3383,0.0019,100
ro95h,con_sqrt,0.2874,0.0023,100
ro95h,con_pc,0.3155,0.002,100
ro95h,con_oecdm,0.2897,0.0024,100
ro95h,con_ae,0.2966,0.0022,100
[1] "Loading dataset ro97h..."
ro97h,market_hh,0.4434,0.0023,100
ro97h,market_sqrt,0.3722,0.0029,100
ro97h,market_pc,0.3854,0.0026,100
ro97h,market_oecdm,0.3733,0.0026,100
ro97h,market_ae,0.3761,0.0024,100
ro97h,gross_hh,0.3504,0.0022,100
ro97h,gross_sqrt,0.292,0.0022,100
ro97h,gross_pc,0.3098,0.0021,100
ro97h,gross_oecdm,0.2918,0.0023,100
ro97h,gross_ae,0.2956,0.0024,100
ro97h,disp_hh,0.3337,0.0025,100
ro97h,disp_sqrt,0.2796,0.0027,100
ro97h,disp_pc,0.3033,0.0023,100
ro97h,disp_oecdm,0.2793,0.0023,100
ro97h,disp_ae,0.285,0.0023,100
ro97h,con_hh,0.3268,0.0017,100
ro97h,con_sqrt,0.2741,0.002,100
ro97h,con_pc,0.3005,0.002,100
ro97h,con_oecdm,0.2747,0.0022,100
ro97h,con_ae,0.2813,0.0023,100
[1] "Loading dataset ro06h..."
ro06h,market_hh,0.5446,0.0043,120
ro06h,market_sqrt,0.4785,0.0053,120
ro06h,market_pc,0.4953,0.0056,120
ro06h,market_oecdm,0.4831,0.0061,120
ro06h,market_ae,0.4873,0.0054,120
ro06h,gross_hh,0.4218,0.0051,120
ro06h,gross_sqrt,0.3706,0.0052,120
ro06h,gross_pc,0.3864,0.0048,120
ro06h,gross_oecdm,0.3722,0.006,120
ro06h,gross_ae,0.3758,0.0052,120
ro06h,disp_hh,0.3893,0.0047,120
ro06h,disp_sqrt,0.3395,0.0043,120
ro06h,disp_pc,0.3602,0.0049,120
ro06h,disp_oecdm,0.3407,0.0048,120
ro06h,disp_ae,0.3459,0.0048,120
ro06h,con_hh,NaN,NA,120
ro06h,con_sqrt,NaN,NA,120
ro06h,con_pc,NaN,NA,120
ro06h,con_oecdm,NaN,NA,120
ro06h,con_ae,NaN,NA,120
[1] "Loading dataset ro07h..."
ro07h,market_hh,0.5437,0.0037,120
ro07h,market_sqrt,0.4697,0.0053,120
ro07h,market_pc,0.4853,0.0051,120
ro07h,market_oecdm,0.4745,0.0052,120
ro07h,market_ae,0.4782,0.0051,120
ro07h,gross_hh,0.4041,0.004,120
ro07h,gross_sqrt,0.3504,0.0046,120
ro07h,gross_pc,0.3651,0.0049,120
ro07h,gross_oecdm,0.3517,0.0047,120
ro07h,gross_ae,0.3547,0.0048,120
ro07h,disp_hh,0.3675,0.004,120
ro07h,disp_sqrt,0.3166,0.0046,120
ro07h,disp_pc,0.3378,0.004,120
ro07h,disp_oecdm,0.3181,0.0045,120
ro07h,disp_ae,0.3231,0.0042,120
ro07h,con_hh,NaN,NA,120
ro07h,con_sqrt,NaN,NA,120
ro07h,con_pc,NaN,NA,120
ro07h,con_oecdm,NaN,NA,120
ro07h,con_ae,NaN,NA,120
[1] "Loading dataset ro08h..."
ro08h,market_hh,0.5422,0.0048,120
ro08h,market_sqrt,0.4607,0.0048,120
ro08h,market_pc,0.475,0.0049,120
ro08h,market_oecdm,0.4649,0.0064,120
ro08h,market_ae,0.4682,0.0055,120
ro08h,gross_hh,0.3926,0.004,120
ro08h,gross_sqrt,0.3376,0.0048,120
ro08h,gross_pc,0.3545,0.0049,120
ro08h,gross_oecdm,0.3384,0.0059,120
ro08h,gross_ae,0.3423,0.0054,120
ro08h,disp_hh,0.3577,0.0037,120
ro08h,disp_sqrt,0.3075,0.0054,120
ro08h,disp_pc,0.3324,0.005,120
ro08h,disp_oecdm,0.3089,0.005,120
ro08h,disp_ae,0.3153,0.0049,120
ro08h,con_hh,NaN,NA,120
ro08h,con_sqrt,NaN,NA,120
ro08h,con_pc,NaN,NA,120
ro08h,con_oecdm,NaN,NA,120
ro08h,con_ae,NaN,NA,120
[1] "Loading dataset ro09h..."
ro09h,market_hh,0.5375,0.0035,120
ro09h,market_sqrt,0.4574,0.0047,120
ro09h,market_pc,0.4687,0.0038,120
ro09h,market_oecdm,0.4604,0.0044,120
ro09h,market_ae,0.4629,0.0045,120
ro09h,gross_hh,0.3825,0.0036,120
ro09h,gross_sqrt,0.3309,0.0041,120
ro09h,gross_pc,0.346,0.0039,120
ro09h,gross_oecdm,0.3307,0.0044,120
ro09h,gross_ae,0.3341,0.0041,120
ro09h,disp_hh,0.3486,0.0036,120
ro09h,disp_sqrt,0.3019,0.0041,120
ro09h,disp_pc,0.3245,0.0045,120
ro09h,disp_oecdm,0.3022,0.004,120
ro09h,disp_ae,0.3079,0.0041,120
ro09h,con_hh,NaN,NA,120
ro09h,con_sqrt,NaN,NA,120
ro09h,con_pc,NaN,NA,120
ro09h,con_oecdm,NaN,NA,120
ro09h,con_ae,NaN,NA,120
[1] "Loading dataset ro10h..."
ro10h,market_hh,0.5348,0.004,120
ro10h,market_sqrt,0.4571,0.0049,120
ro10h,market_pc,0.4675,0.0049,120
ro10h,market_oecdm,0.4589,0.005,120
ro10h,market_ae,0.4613,0.0049,120
ro10h,gross_hh,0.378,0.0041,120
ro10h,gross_sqrt,0.3314,0.0048,120
ro10h,gross_pc,0.347,0.0049,120
ro10h,gross_oecdm,0.3303,0.0051,120
ro10h,gross_ae,0.334,0.0047,120
ro10h,disp_hh,0.3461,0.0033,120
ro10h,disp_sqrt,0.3045,0.0043,120
ro10h,disp_pc,0.3277,0.0044,120
ro10h,disp_oecdm,0.3038,0.0048,120
ro10h,disp_ae,0.3099,0.0045,120
ro10h,con_hh,NaN,NA,120
ro10h,con_sqrt,NaN,NA,120
ro10h,con_pc,NaN,NA,120
ro10h,con_oecdm,NaN,NA,120
ro10h,con_ae,NaN,NA,120
[1] "Loading dataset ro11h..."
ro11h,market_hh,0.5524,0.0046,120
ro11h,market_sqrt,0.4716,0.0052,120
ro11h,market_pc,0.4876,0.0055,120
ro11h,market_oecdm,0.4766,0.0054,120
ro11h,market_ae,0.4801,0.0054,120
ro11h,gross_hh,0.3855,0.0044,120
ro11h,gross_sqrt,0.338,0.0046,120
ro11h,gross_pc,0.3564,0.0056,120
ro11h,gross_oecdm,0.34,0.0047,120
ro11h,gross_ae,0.3439,0.0046,120
ro11h,disp_hh,0.3523,0.0038,120
ro11h,disp_sqrt,0.3093,0.0043,120
ro11h,disp_pc,0.3355,0.0047,120
ro11h,disp_oecdm,0.3118,0.0047,120
ro11h,disp_ae,0.3181,0.0043,120
ro11h,con_hh,NaN,NA,120
ro11h,con_sqrt,NaN,NA,120
ro11h,con_pc,NaN,NA,120
ro11h,con_oecdm,NaN,NA,120
ro11h,con_ae,NaN,NA,120
[1] "Loading dataset ro12h..."
ro12h,market_hh,0.5348,0.0047,120
ro12h,market_sqrt,0.4567,0.0055,120
ro12h,market_pc,0.4702,0.0052,120
ro12h,market_oecdm,0.4618,0.0052,120
ro12h,market_ae,0.4645,0.006,120
ro12h,gross_hh,0.3832,0.004,120
ro12h,gross_sqrt,0.336,0.0054,120
ro12h,gross_pc,0.3547,0.0052,120
ro12h,gross_oecdm,0.3388,0.0048,120
ro12h,gross_ae,0.3425,0.0049,120
ro12h,disp_hh,0.3497,0.0038,120
ro12h,disp_sqrt,0.3067,0.0052,120
ro12h,disp_pc,0.3339,0.0053,120
ro12h,disp_oecdm,0.3101,0.0051,120
ro12h,disp_ae,0.3165,0.0052,120
ro12h,con_hh,NaN,NA,120
ro12h,con_sqrt,NaN,NA,120
ro12h,con_pc,NaN,NA,120
ro12h,con_oecdm,NaN,NA,120
ro12h,con_ae,NaN,NA,120
[1] "Loading dataset ro13h..."
ro13h,market_hh,0.5367,0.0044,120
ro13h,market_sqrt,0.4616,0.0037,120
ro13h,market_pc,0.4766,0.0052,120
ro13h,market_oecdm,0.4675,0.0042,120
ro13h,market_ae,0.4705,0.005,120
ro13h,gross_hh,0.3854,0.0038,120
ro13h,gross_sqrt,0.3404,0.0042,120
ro13h,gross_pc,0.3605,0.005,120
ro13h,gross_oecdm,0.3447,0.0043,120
ro13h,gross_ae,0.3488,0.0051,120
ro13h,disp_hh,0.3511,0.004,120
ro13h,disp_sqrt,0.3099,0.0046,120
ro13h,disp_pc,0.3385,0.005,120
ro13h,disp_oecdm,0.3147,0.0052,120
ro13h,disp_ae,0.3214,0.0048,120
ro13h,con_hh,NaN,NA,120
ro13h,con_sqrt,NaN,NA,120
ro13h,con_pc,NaN,NA,120
ro13h,con_oecdm,NaN,NA,120
ro13h,con_ae,NaN,NA,120
[1] "Loading dataset ro14h..."
ro14h,market_hh,0.5638,0.0045,120
ro14h,market_sqrt,0.4806,0.0065,120
ro14h,market_pc,0.4969,0.0062,120
ro14h,market_oecdm,0.4868,0.0053,120
ro14h,market_ae,0.4902,0.0059,120
ro14h,gross_hh,0.3994,0.0036,120
ro14h,gross_sqrt,0.3471,0.0053,120
ro14h,gross_pc,0.36,0.0061,120
ro14h,gross_oecdm,0.3496,0.0046,120
ro14h,gross_ae,0.3513,0.0049,120
ro14h,disp_hh,0.3639,0.0036,120
ro14h,disp_sqrt,0.3148,0.0041,120
ro14h,disp_pc,0.3353,0.0058,120
ro14h,disp_oecdm,0.3171,0.0056,120
ro14h,disp_ae,0.3213,0.0055,120
ro14h,con_hh,NaN,NA,120
ro14h,con_sqrt,NaN,NA,120
ro14h,con_pc,NaN,NA,120
ro14h,con_oecdm,NaN,NA,120
ro14h,con_ae,NaN,NA,120
[1] "Loading dataset ro15h..."
ro15h,market_hh,0.5521,0.0058,120
ro15h,market_sqrt,0.4744,0.0079,120
ro15h,market_pc,0.4903,0.0065,120
ro15h,market_oecdm,0.4806,0.0073,120
ro15h,market_ae,0.4838,0.0067,120
ro15h,gross_hh,0.3993,0.0044,120
ro15h,gross_sqrt,0.3456,0.0056,120
ro15h,gross_pc,0.3596,0.0063,120
ro15h,gross_oecdm,0.3481,0.0066,120
ro15h,gross_ae,0.3501,0.0074,120
ro15h,disp_hh,0.3633,0.0044,120
ro15h,disp_sqrt,0.3129,0.0059,120
ro15h,disp_pc,0.334,0.0063,120
ro15h,disp_oecdm,0.3153,0.0071,120
ro15h,disp_ae,0.3195,0.006,120
ro15h,con_hh,NaN,NA,120
ro15h,con_sqrt,NaN,NA,120
ro15h,con_pc,NaN,NA,120
ro15h,con_oecdm,NaN,NA,120
ro15h,con_ae,NaN,NA,120
[1] "Loading dataset ro16h..."
ro16h,market_hh,0.5534,0.0048,120
ro16h,market_sqrt,0.4712,0.0058,120
ro16h,market_pc,0.4911,0.0056,120
ro16h,market_oecdm,0.4771,0.0054,120
ro16h,market_ae,0.4818,0.0059,120
ro16h,gross_hh,0.3933,0.0036,120
ro16h,gross_sqrt,0.3353,0.0047,120
ro16h,gross_pc,0.3493,0.0048,120
ro16h,gross_oecdm,0.3366,0.0047,120
ro16h,gross_ae,0.339,0.0059,120
ro16h,disp_hh,0.3605,0.0041,120
ro16h,disp_sqrt,0.3047,0.0044,120
ro16h,disp_pc,0.3242,0.0047,120
ro16h,disp_oecdm,0.3053,0.0051,120
ro16h,disp_ae,0.3094,0.0048,120
ro16h,con_hh,NaN,NA,120
ro16h,con_sqrt,NaN,NA,120
ro16h,con_pc,NaN,NA,120
ro16h,con_oecdm,NaN,NA,120
ro16h,con_ae,NaN,NA,120
[1] "Loading dataset ro17h..."
ro17h,market_hh,0.5586,0.0047,120
ro17h,market_sqrt,0.4766,0.0061,120
ro17h,market_pc,0.4945,0.0052,120
ro17h,market_oecdm,0.4813,0.0066,120
ro17h,market_ae,0.4856,0.0061,120
ro17h,gross_hh,0.413,0.004,120
ro17h,gross_sqrt,0.3547,0.0053,120
ro17h,gross_pc,0.3624,0.0054,120
ro17h,gross_oecdm,0.3537,0.0044,120
ro17h,gross_ae,0.3545,0.0059,120
ro17h,disp_hh,0.3825,0.0041,120
ro17h,disp_sqrt,0.3262,0.0052,120
ro17h,disp_pc,0.3371,0.0047,120
ro17h,disp_oecdm,0.3242,0.0047,120
ro17h,disp_ae,0.3261,0.0049,120
ro17h,con_hh,NaN,NA,120
ro17h,con_sqrt,NaN,NA,120
ro17h,con_pc,NaN,NA,120
ro17h,con_oecdm,NaN,NA,120
ro17h,con_ae,NaN,NA,120
[1] "Loading dataset ro18h..."
ro18h,market_hh,0.5701,0.0054,120
ro18h,market_sqrt,0.4867,0.0058,120
ro18h,market_pc,0.5064,0.0063,120
ro18h,market_oecdm,0.4919,0.0059,120
ro18h,market_ae,0.4967,0.0061,120
ro18h,gross_hh,0.4412,0.0044,120
ro18h,gross_sqrt,0.3779,0.0057,120
ro18h,gross_pc,0.3816,0.005,120
ro18h,gross_oecdm,0.3769,0.0052,120
ro18h,gross_ae,0.3766,0.0052,120
ro18h,disp_hh,0.3826,0.0044,120
ro18h,disp_sqrt,0.3252,0.005,120
ro18h,disp_pc,0.3353,0.0046,120
ro18h,disp_oecdm,0.3232,0.0049,120
ro18h,disp_ae,0.3247,0.0054,120
ro18h,con_hh,NaN,NA,120
ro18h,con_sqrt,NaN,NA,120
ro18h,con_pc,NaN,NA,120
ro18h,con_oecdm,NaN,NA,120
ro18h,con_ae,NaN,NA,120
[1] "Loading dataset ro19h..."
ro19h,market_hh,0.5637,0.005,120
ro19h,market_sqrt,0.4778,0.0071,120
ro19h,market_pc,0.5011,0.006,120
ro19h,market_oecdm,0.4842,0.0056,120
ro19h,market_ae,0.49,0.0065,120
ro19h,gross_hh,0.4309,0.0042,120
ro19h,gross_sqrt,0.3658,0.0056,120
ro19h,gross_pc,0.3724,0.0054,120
ro19h,gross_oecdm,0.3655,0.0053,120
ro19h,gross_ae,0.3659,0.0054,120
ro19h,disp_hh,0.3729,0.004,120
ro19h,disp_sqrt,0.313,0.0052,120
ro19h,disp_pc,0.3266,0.0049,120
ro19h,disp_oecdm,0.3117,0.005,120
ro19h,disp_ae,0.3142,0.0054,120
ro19h,con_hh,NaN,NA,120
ro19h,con_sqrt,NaN,NA,120
ro19h,con_pc,NaN,NA,120
ro19h,con_oecdm,NaN,NA,120
ro19h,con_ae,NaN,NA,120
[1] "Loading dataset ro20h..."
ro20h,market_hh,0.5725,0.0052,120
ro20h,market_sqrt,0.4841,0.0067,120
ro20h,market_pc,0.5082,0.0062,120
ro20h,market_oecdm,0.4908,0.0062,120
ro20h,market_ae,0.4968,0.0059,120
ro20h,gross_hh,0.4389,0.0039,120
ro20h,gross_sqrt,0.3696,0.0056,120
ro20h,gross_pc,0.3748,0.0059,120
ro20h,gross_oecdm,0.3703,0.006,120
ro20h,gross_ae,0.37,0.0056,120
ro20h,disp_hh,0.3827,0.004,120
ro20h,disp_sqrt,0.3196,0.0048,120
ro20h,disp_pc,0.3307,0.0059,120
ro20h,disp_oecdm,0.3201,0.0052,120
ro20h,disp_ae,0.3211,0.0056,120
ro20h,con_hh,NaN,NA,120
ro20h,con_sqrt,NaN,NA,120
ro20h,con_pc,NaN,NA,120
ro20h,con_oecdm,NaN,NA,120
ro20h,con_ae,NaN,NA,120
[1] "Loading dataset ro21h..."
ro21h,market_hh,0.5553,0.0055,120
ro21h,market_sqrt,0.4628,0.0062,120
ro21h,market_pc,0.4924,0.0068,120
ro21h,market_oecdm,0.4725,0.0063,120
ro21h,market_ae,0.4796,0.0063,120
ro21h,gross_hh,0.4071,0.0043,120
ro21h,gross_sqrt,0.3373,0.0047,120
ro21h,gross_pc,0.352,0.0056,120
ro21h,gross_oecdm,0.3403,0.0057,120
ro21h,gross_ae,0.3423,0.0054,120
ro21h,disp_hh,0.3562,0.0044,120
ro21h,disp_sqrt,0.2946,0.005,120
ro21h,disp_pc,0.3211,0.0051,120
ro21h,disp_oecdm,0.2981,0.005,120
ro21h,disp_ae,0.3037,0.0049,120
ro21h,con_hh,NaN,NA,120
ro21h,con_sqrt,NaN,NA,120
ro21h,con_pc,NaN,NA,120
ro21h,con_oecdm,NaN,NA,120
ro21h,con_ae,NaN,NA,120
> 
> proc.time()
   user  system elapsed 
186.573   0.567 193.365 


