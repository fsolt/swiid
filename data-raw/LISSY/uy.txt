From: <postbox@lisdatacenter.org>
Subject: job 1362368 uy
Date: June 20, 2025 at 9:35:45 AM CDT
To: <fsolt@mac.com>

############################### NOTICE TO USERS ###############################
                                                                        Use of the data in the LUXEMBOURG INCOME STUDY DATABASES is governed by regulations which do not allow copying or further distribution of the survey microdata.                                                     

Anyone violating these regulations will lose all privileges to the databases and may be subject to prosecution under the law. In addition, any attempt to circumvent the LIS processing system or unauthorized entry into the LIS computing system will result in prosecution.             
All papers written using the LUXEMBOURG INCOME STUDY DATABASES must be  submitted for entry into the Working Papers Series. Users of the LIS or LWS microdata are required to cite the data source in their list of references.                   

Please consult our web site for more information at WWW.LISDATACENTER.ORG
                                                                        
############################### NOTICE TO USERS ###############################

> 
> 
> 
> 
> 
> 
> options(echo=FALSE, encoding="UTF-8")
Loading required package: readstata13
> 
> 
> options(error = expression(q('no')))
> ## Define functions 
> gini <- function(df, x) { 
+   df1 <- df[!is.na(df[[x]]), ] 
+   x <- as.vector(df1[[x]]) 
+   weight <- df1$wt 
+    
+   ox <- order(x) 
+   x <- as.vector(x)[ox] 
+   weight <- as.vector(weight)[ox] / sum(weight)  
+   p <- cumsum(weight) 
+   nu <- cumsum(weight * x) 
+   n <- length(nu) 
+   nu <- nu / nu[n] 
+   res <- round((sum(nu[-1] * p[-n]) - sum(nu[-n] * p[-1])), digits = 4) 
+   return(res) 
+ } 
>  
> wNtile <- function(var, wgt, split) { 
+   x <- var[order(var)] 
+   y <- wgt[order(var)] 
+   z <- cumsum(y) / sum(y) 
+   cop <- rep(NA, length(split))  
+   for (i in 1:length(cop)) { 
+     cop[i] <- x[Find(function(h) z[h] > split[i], seq_along(z))] 
+   } 
+   return(cop) 
+ } 
>  
> topBottom <- function(var, botline, topline) { 
+   tb <- ifelse(var < botline, botline, var) 
+   tb <- ifelse(tb > topline, topline, tb) 
+   return(tb) 
+ } 
>  
> setups <- function(df) { 
+   botline <- 0 
+   topline <- exp(log(wNtile(df$dhi, df$hpopwgt, 0.75)) + 3 * (log(wNtile(df$dhi, df$hpopwgt, 0.75)) - log(wNtile(df$dhi, df$hpopwgt, 0.25)))) 
+   df$oecdm <- 1 + .5 * (df$nhhmem - df$nhhmem13 - 1) + .3 * df$nhhmem13 
+   df$ae <- 1 + .7 * (df$nhhmem - df$nhhmem13 - 1) + .5 * df$nhhmem13 
+    
+   df$disp_hh <- topBottom(df$dhi, botline, topline) 
+   df$disp_sqrt <- df$disp_hh / (df$nhhmem ^ 0.5) 
+   df$disp_pc <- df$disp_hh / df$nhhmem 
+   df$disp_oecdm <- df$disp_hh / df$oecdm 
+   df$disp_ae <- df$disp_hh / df$ae 
+    
+   df$gross_hh <- topBottom(df$hitotal, botline, topline) 
+   df$gross_sqrt <- df$gross_hh / (df$nhhmem ^ 0.5) 
+   df$gross_pc <- df$gross_hh / df$nhhmem 
+   df$gross_oecdm <- df$gross_hh / df$oecdm 
+   df$gross_ae <- df$gross_hh / df$ae 
+    
+   df$market_hh <- topBottom(ifelse(!is.na(df$hiprivate), (df$hifactor + df$hiprivate), df$hifactor), botline, topline) 
+   df$market_sqrt <- df$market_hh / (df$nhhmem ^ 0.5) 
+   df$market_pc <- df$market_hh / df$nhhmem 
+   df$market_oecdm <- df$market_hh / df$oecdm 
+   df$market_ae <- df$market_hh / df$ae 
+    
+   df$con_hh <- topBottom(df$hcexp, botline, topline) 
+   df$con_sqrt <- df$con_hh / (df$nhhmem ^ 0.5) 
+   df$con_pc <- df$con_hh / df$nhhmem 
+   df$con_oecdm <- df$con_hh / df$oecdm 
+   df$con_ae <- df$con_hh / df$ae 
+    
+   return(df) 
+ } 
>  
> boot_gini_se <- function(data, var, reps=100) { 
+   data <- data[!is.na(data[[var]]), ] 
+   resamples <- lapply(1:reps, function(i) dplyr::sample_n(data, size = nrow(data), replace=TRUE)) 
+   r_stat <- lapply(resamples, function(x) gini(x, var)) 
+   std_err <- round(sqrt(var(unlist(r_stat))), digits = 4) 
+   return(std_err)    
+ } 
>  
> # For testing at home: 
> # read.LIS <- function(data_file, labels, vars) { 
> #   require(dplyr) 
> #   data_file <- stringr::str_replace(data_file, "h", "ih.dta") 
> #   df <- haven::read_dta(data_file)[, vars] 
> #   if (!labels) { 
> #     df <- df %>% dplyr::mutate_all(list(as.numeric)) 
> #   } 
> #   return(df) 
> # } 
>  
> get_ginis <- function(cc, reps = 100) { 
+   set.seed(324) 
+   ccs <- c("au", "at", "be", "br", "ca", "ci", "cl", "cn", "co", "cz", "dk",  
+            "do", "eg", "ee", "fi", "fr", "de", "ge", "gr", "gt", "hu", "is", "in", 
+            "ie", "il", "it", "jp", "lt", "lu", "ml", "mx", "nl", "no", "pa", "py",  
+            "pe", "pl", "ps", "ro", "ru", "rs", "sk", "si", "za", "kr", "es", "se",  
+            "ch", "tw", "uk", "us", "uy", "vn", 
+            "iq", "jo", "ps", "so", "sd", "tn")  
+   cc <- tolower(cc) 
+   if (!cc %in% ccs) { 
+     stop("Please specify a LIS country in iso2c format") 
+   } 
+   last_year_yy <- as.numeric(format(Sys.Date(), "%Y")) - 2001 
+   yy <- as.character(c(c(63:99), paste0("0", 0:9), c(10:last_year_yy))) 
+  
+   datasets <- paste0(rep(cc, each = length(yy)), rep(yy, times = length(cc)), "h") 
+   vars <- c("dhi", "hitotal", "hifactor", "hiprivate", "hcexp", "hpopwgt", "nhhmem", "nhhmem13", "grossnet") 
+  
+   v <- c("market_hh", "market_sqrt", "market_pc", "market_oecdm", "market_ae", 
+          "gross_hh", "gross_sqrt", "gross_pc", "gross_oecdm", "gross_ae", 
+          "disp_hh", "disp_sqrt", "disp_pc", "disp_oecdm", "disp_ae", 
+          "con_hh", "con_sqrt", "con_pc", "con_oecdm", "con_ae") 
+    
+   for (ccyy in datasets) { 
+     cat("") 
+     df <- try(read.LIS(ccyy, labels = FALSE, vars = vars), silent = TRUE) 
+     if (!class(df)[1] == "try-error") { 
+       mean_dhi <- mean(df$dhi, na.rm = TRUE) 
+       if (!is.nan(mean_dhi) & !mean_dhi == 0) { 
+         df <- setups(df) 
+         for (var in v) { 
+           if (grepl("hh", var)) { 
+             df$wt <- df$hpopwgt 
+           } else { 
+             df$wt <- df$hpopwgt * df$nhhmem 
+           } 
+           if (!is.na(mean(df[[var]], na.rm = TRUE))) { 
+             cat(paste(ccyy,  
+                       var,  
+                       gini(df, var), 
+                       boot_gini_se(df, var, reps = reps), 
+                       df$grossnet[1], 
+                       sep = ","), sep = "\n") 
+           } 
+         } 
+       } 
+     } 
+   } 
+ } 
>  
> # Call 
> get_ginis("uy") 
[1] "Loading dataset uy04h..."
uy04h,market_hh,0.5692,0.0028,200
uy04h,market_sqrt,0.524,0.0032,200
uy04h,market_pc,0.5479,0.0031,200
uy04h,market_oecdm,0.5279,0.0032,200
uy04h,market_ae,0.5346,0.0033,200
uy04h,gross_hh,0.4371,0.0031,200
uy04h,gross_sqrt,0.4353,0.0032,200
uy04h,gross_pc,0.4718,0.003,200
uy04h,gross_oecdm,0.4397,0.0032,200
uy04h,gross_ae,0.4504,0.0032,200
uy04h,disp_hh,0.4371,0.003,200
uy04h,disp_sqrt,0.4353,0.0032,200
uy04h,disp_pc,0.4718,0.003,200
uy04h,disp_oecdm,0.4397,0.0035,200
uy04h,disp_ae,0.4504,0.0028,200
uy04h,con_hh,NaN,NA,200
uy04h,con_sqrt,NaN,NA,200
uy04h,con_pc,NaN,NA,200
uy04h,con_oecdm,NaN,NA,200
uy04h,con_ae,NaN,NA,200
[1] "Loading dataset uy05h..."
uy05h,market_hh,0.5704,0.0033,200
uy05h,market_sqrt,0.5206,0.0034,200
uy05h,market_pc,0.5432,0.003,200
uy05h,market_oecdm,0.5242,0.0035,200
uy05h,market_ae,0.5304,0.0025,200
uy05h,gross_hh,0.4313,0.0026,200
uy05h,gross_sqrt,0.424,0.003,200
uy05h,gross_pc,0.4592,0.0027,200
uy05h,gross_oecdm,0.428,0.0026,200
uy05h,gross_ae,0.4382,0.003,200
uy05h,disp_hh,0.4313,0.003,200
uy05h,disp_sqrt,0.424,0.003,200
uy05h,disp_pc,0.4592,0.0027,200
uy05h,disp_oecdm,0.428,0.0028,200
uy05h,disp_ae,0.4382,0.0027,200
uy05h,con_hh,NaN,NA,200
uy05h,con_sqrt,NaN,NA,200
uy05h,con_pc,NaN,NA,200
uy05h,con_oecdm,NaN,NA,200
uy05h,con_ae,NaN,NA,200
[1] "Loading dataset uy06h..."
uy06h,market_hh,0.5763,0.0022,200
uy06h,market_sqrt,0.5358,0.0021,200
uy06h,market_pc,0.5579,0.0019,200
uy06h,market_oecdm,0.5376,0.0023,200
uy06h,market_ae,0.544,0.0021,200
uy06h,gross_hh,0.4428,0.0019,200
uy06h,gross_sqrt,0.431,0.0022,200
uy06h,gross_pc,0.4646,0.0018,200
uy06h,gross_oecdm,0.4326,0.0019,200
uy06h,gross_ae,0.4428,0.0017,200
uy06h,disp_hh,0.4428,0.002,200
uy06h,disp_sqrt,0.431,0.002,200
uy06h,disp_pc,0.4646,0.002,200
uy06h,disp_oecdm,0.4326,0.002,200
uy06h,disp_ae,0.4428,0.0018,200
uy06h,con_hh,NaN,NA,200
uy06h,con_sqrt,NaN,NA,200
uy06h,con_pc,NaN,NA,200
uy06h,con_oecdm,NaN,NA,200
uy06h,con_ae,NaN,NA,200
[1] "Loading dataset uy07h..."
uy07h,market_hh,0.5674,0.002,200
uy07h,market_sqrt,0.5323,0.0024,200
uy07h,market_pc,0.558,0.0022,200
uy07h,market_oecdm,0.5353,0.0022,200
uy07h,market_ae,0.5427,0.0018,200
uy07h,gross_hh,0.4391,0.0019,200
uy07h,gross_sqrt,0.4302,0.0021,200
uy07h,gross_pc,0.468,0.002,200
uy07h,gross_oecdm,0.4333,0.0021,200
uy07h,gross_ae,0.4447,0.0018,200
uy07h,disp_hh,0.4391,0.0019,200
uy07h,disp_sqrt,0.4302,0.0023,200
uy07h,disp_pc,0.468,0.0018,200
uy07h,disp_oecdm,0.4333,0.002,200
uy07h,disp_ae,0.4447,0.002,200
uy07h,con_hh,NaN,NA,200
uy07h,con_sqrt,NaN,NA,200
uy07h,con_pc,NaN,NA,200
uy07h,con_oecdm,NaN,NA,200
uy07h,con_ae,NaN,NA,200
[1] "Loading dataset uy08h..."
uy08h,market_hh,0.5633,0.002,200
uy08h,market_sqrt,0.5207,0.0027,200
uy08h,market_pc,0.5415,0.0026,200
uy08h,market_oecdm,0.5224,0.0024,200
uy08h,market_ae,0.5283,0.0022,200
uy08h,gross_hh,0.4413,0.0023,200
uy08h,gross_sqrt,0.4282,0.0023,200
uy08h,gross_pc,0.458,0.0022,200
uy08h,gross_oecdm,0.4296,0.0021,200
uy08h,gross_ae,0.4383,0.0021,200
uy08h,disp_hh,0.4413,0.0022,200
uy08h,disp_sqrt,0.4282,0.0024,200
uy08h,disp_pc,0.458,0.0023,200
uy08h,disp_oecdm,0.4296,0.0023,200
uy08h,disp_ae,0.4383,0.0022,200
uy08h,con_hh,NaN,NA,200
uy08h,con_sqrt,NaN,NA,200
uy08h,con_pc,NaN,NA,200
uy08h,con_oecdm,NaN,NA,200
uy08h,con_ae,NaN,NA,200
[1] "Loading dataset uy09h..."
uy09h,market_hh,0.5606,0.0027,200
uy09h,market_sqrt,0.519,0.0026,200
uy09h,market_pc,0.5431,0.0028,200
uy09h,market_oecdm,0.5219,0.0026,200
uy09h,market_ae,0.5287,0.0031,200
uy09h,gross_hh,0.4345,0.0031,200
uy09h,gross_sqrt,0.421,0.0028,200
uy09h,gross_pc,0.455,0.0027,200
uy09h,gross_oecdm,0.4236,0.0027,200
uy09h,gross_ae,0.4336,0.0029,200
uy09h,disp_hh,0.4345,0.0026,200
uy09h,disp_sqrt,0.421,0.0029,200
uy09h,disp_pc,0.455,0.0026,200
uy09h,disp_oecdm,0.4236,0.0029,200
uy09h,disp_ae,0.4336,0.003,200
uy09h,con_hh,NaN,NA,200
uy09h,con_sqrt,NaN,NA,200
uy09h,con_pc,NaN,NA,200
uy09h,con_oecdm,NaN,NA,200
uy09h,con_ae,NaN,NA,200
[1] "Loading dataset uy10h..."
uy10h,market_hh,0.5527,0.002,200
uy10h,market_sqrt,0.5088,0.0024,200
uy10h,market_pc,0.5357,0.0026,200
uy10h,market_oecdm,0.5124,0.0023,200
uy10h,market_ae,0.52,0.0024,200
uy10h,gross_hh,0.4216,0.0021,200
uy10h,gross_sqrt,0.4075,0.0022,200
uy10h,gross_pc,0.4455,0.0022,200
uy10h,gross_oecdm,0.4112,0.0025,200
uy10h,gross_ae,0.4223,0.0023,200
uy10h,disp_hh,0.4216,0.0021,200
uy10h,disp_sqrt,0.4075,0.0024,200
uy10h,disp_pc,0.4455,0.0022,200
uy10h,disp_oecdm,0.4112,0.0019,200
uy10h,disp_ae,0.4223,0.0019,200
uy10h,con_hh,NaN,NA,200
uy10h,con_sqrt,NaN,NA,200
uy10h,con_pc,NaN,NA,200
uy10h,con_oecdm,NaN,NA,200
uy10h,con_ae,NaN,NA,200
[1] "Loading dataset uy11h..."
uy11h,market_hh,0.5208,0.0018,200
uy11h,market_sqrt,0.4811,0.002,200
uy11h,market_pc,0.5105,0.002,200
uy11h,market_oecdm,0.4848,0.0023,200
uy11h,market_ae,0.4933,0.0022,200
uy11h,gross_hh,0.4023,0.0018,200
uy11h,gross_sqrt,0.3845,0.002,200
uy11h,gross_pc,0.4219,0.0018,200
uy11h,gross_oecdm,0.3874,0.002,200
uy11h,gross_ae,0.3985,0.0017,200
uy11h,disp_hh,0.4023,0.002,200
uy11h,disp_sqrt,0.3845,0.0021,200
uy11h,disp_pc,0.4219,0.0021,200
uy11h,disp_oecdm,0.3874,0.0018,200
uy11h,disp_ae,0.3985,0.0022,200
uy11h,con_hh,NaN,NA,200
uy11h,con_sqrt,NaN,NA,200
uy11h,con_pc,NaN,NA,200
uy11h,con_oecdm,NaN,NA,200
uy11h,con_ae,NaN,NA,200
[1] "Loading dataset uy12h..."
uy12h,market_hh,0.4999,0.0018,200
uy12h,market_sqrt,0.4562,0.0017,200
uy12h,market_pc,0.4871,0.0017,200
uy12h,market_oecdm,0.461,0.0018,200
uy12h,market_ae,0.4696,0.0016,200
uy12h,gross_hh,0.3766,0.0012,200
uy12h,gross_sqrt,0.3583,0.0015,200
uy12h,gross_pc,0.3992,0.0016,200
uy12h,gross_oecdm,0.3624,0.0014,200
uy12h,gross_ae,0.3743,0.0016,200
uy12h,disp_hh,0.3766,0.0014,200
uy12h,disp_sqrt,0.3583,0.0017,200
uy12h,disp_pc,0.3992,0.0014,200
uy12h,disp_oecdm,0.3624,0.0015,200
uy12h,disp_ae,0.3743,0.0014,200
uy12h,con_hh,NaN,NA,200
uy12h,con_sqrt,NaN,NA,200
uy12h,con_pc,NaN,NA,200
uy12h,con_oecdm,NaN,NA,200
uy12h,con_ae,NaN,NA,200
[1] "Loading dataset uy13h..."
uy13h,market_hh,0.5137,0.0021,200
uy13h,market_sqrt,0.469,0.002,200
uy13h,market_pc,0.494,0.0019,200
uy13h,market_oecdm,0.4712,0.0018,200
uy13h,market_ae,0.4784,0.0019,200
uy13h,gross_hh,0.3899,0.0015,200
uy13h,gross_sqrt,0.3737,0.0018,200
uy13h,gross_pc,0.4084,0.0015,200
uy13h,gross_oecdm,0.3755,0.0017,200
uy13h,gross_ae,0.3858,0.0016,200
uy13h,disp_hh,0.3899,0.0017,200
uy13h,disp_sqrt,0.3737,0.0018,200
uy13h,disp_pc,0.4084,0.0017,200
uy13h,disp_oecdm,0.3755,0.0016,200
uy13h,disp_ae,0.3858,0.0017,200
uy13h,con_hh,NaN,NA,200
uy13h,con_sqrt,NaN,NA,200
uy13h,con_pc,NaN,NA,200
uy13h,con_oecdm,NaN,NA,200
uy13h,con_ae,NaN,NA,200
[1] "Loading dataset uy14h..."
uy14h,market_hh,0.5077,0.0017,200
uy14h,market_sqrt,0.464,0.0015,200
uy14h,market_pc,0.4916,0.0016,200
uy14h,market_oecdm,0.467,0.0018,200
uy14h,market_ae,0.4748,0.0019,200
uy14h,gross_hh,0.3873,0.0015,200
uy14h,gross_sqrt,0.3674,0.0016,200
uy14h,gross_pc,0.4035,0.0014,200
uy14h,gross_oecdm,0.3697,0.0015,200
uy14h,gross_ae,0.3802,0.0015,200
uy14h,disp_hh,0.3873,0.0014,200
uy14h,disp_sqrt,0.3674,0.0013,200
uy14h,disp_pc,0.4035,0.0014,200
uy14h,disp_oecdm,0.3697,0.0016,200
uy14h,disp_ae,0.3802,0.0015,200
uy14h,con_hh,NaN,NA,200
uy14h,con_sqrt,NaN,NA,200
uy14h,con_pc,NaN,NA,200
uy14h,con_oecdm,NaN,NA,200
uy14h,con_ae,NaN,NA,200
[1] "Loading dataset uy15h..."
uy15h,market_hh,0.511,0.002,200
uy15h,market_sqrt,0.4676,0.0019,200
uy15h,market_pc,0.4946,0.0015,200
uy15h,market_oecdm,0.4713,0.0017,200
uy15h,market_ae,0.4788,0.0017,200
uy15h,gross_hh,0.3852,0.0014,200
uy15h,gross_sqrt,0.3687,0.0016,200
uy15h,gross_pc,0.405,0.0015,200
uy15h,gross_oecdm,0.3719,0.0015,200
uy15h,gross_ae,0.3824,0.0015,200
uy15h,disp_hh,0.3852,0.0016,200
uy15h,disp_sqrt,0.3687,0.0016,200
uy15h,disp_pc,0.405,0.0015,200
uy15h,disp_oecdm,0.3719,0.0016,200
uy15h,disp_ae,0.3824,0.0015,200
uy15h,con_hh,NaN,NA,200
uy15h,con_sqrt,NaN,NA,200
uy15h,con_pc,NaN,NA,200
uy15h,con_oecdm,NaN,NA,200
uy15h,con_ae,NaN,NA,200
[1] "Loading dataset uy16h..."
uy16h,market_hh,0.5067,0.0018,200
uy16h,market_sqrt,0.4643,0.0019,200
uy16h,market_pc,0.4917,0.0018,200
uy16h,market_oecdm,0.4684,0.0017,200
uy16h,market_ae,0.476,0.0016,200
uy16h,gross_hh,0.381,0.0014,200
uy16h,gross_sqrt,0.3646,0.0013,200
uy16h,gross_pc,0.4015,0.0014,200
uy16h,gross_oecdm,0.3683,0.0014,200
uy16h,gross_ae,0.3789,0.0015,200
uy16h,disp_hh,0.381,0.0014,200
uy16h,disp_sqrt,0.3646,0.0019,200
uy16h,disp_pc,0.4015,0.0014,200
uy16h,disp_oecdm,0.3683,0.0016,200
uy16h,disp_ae,0.3789,0.0018,200
uy16h,con_hh,NaN,NA,200
uy16h,con_sqrt,NaN,NA,200
uy16h,con_pc,NaN,NA,200
uy16h,con_oecdm,NaN,NA,200
uy16h,con_ae,NaN,NA,200
[1] "Loading dataset uy17h..."
uy17h,market_hh,0.5109,0.0017,200
uy17h,market_sqrt,0.4675,0.002,200
uy17h,market_pc,0.4922,0.0018,200
uy17h,market_oecdm,0.4712,0.0019,200
uy17h,market_ae,0.4779,0.0019,200
uy17h,gross_hh,0.3832,0.0015,200
uy17h,gross_sqrt,0.3654,0.0017,200
uy17h,gross_pc,0.3989,0.0017,200
uy17h,gross_oecdm,0.3685,0.0016,200
uy17h,gross_ae,0.3779,0.0018,200
uy17h,disp_hh,0.3832,0.0015,200
uy17h,disp_sqrt,0.3654,0.0018,200
uy17h,disp_pc,0.3989,0.0016,200
uy17h,disp_oecdm,0.3685,0.0017,200
uy17h,disp_ae,0.3779,0.0015,200
uy17h,con_hh,NaN,NA,200
uy17h,con_sqrt,NaN,NA,200
uy17h,con_pc,NaN,NA,200
uy17h,con_oecdm,NaN,NA,200
uy17h,con_ae,NaN,NA,200
[1] "Loading dataset uy18h..."
uy18h,market_hh,0.5135,0.0021,200
uy18h,market_sqrt,0.4691,0.0021,200
uy18h,market_pc,0.4947,0.0018,200
uy18h,market_oecdm,0.4734,0.0018,200
uy18h,market_ae,0.4802,0.002,200
uy18h,gross_hh,0.3832,0.0018,200
uy18h,gross_sqrt,0.3663,0.0016,200
uy18h,gross_pc,0.4016,0.0018,200
uy18h,gross_oecdm,0.3703,0.0017,200
uy18h,gross_ae,0.3802,0.0015,200
uy18h,disp_hh,0.3832,0.0017,200
uy18h,disp_sqrt,0.3663,0.0017,200
uy18h,disp_pc,0.4016,0.0017,200
uy18h,disp_oecdm,0.3703,0.0016,200
uy18h,disp_ae,0.3802,0.0016,200
uy18h,con_hh,NaN,NA,200
uy18h,con_sqrt,NaN,NA,200
uy18h,con_pc,NaN,NA,200
uy18h,con_oecdm,NaN,NA,200
uy18h,con_ae,NaN,NA,200
[1] "Loading dataset uy19h..."
uy19h,market_hh,0.5156,0.0018,200
uy19h,market_sqrt,0.4727,0.0021,200
uy19h,market_pc,0.4981,0.0018,200
uy19h,market_oecdm,0.4772,0.0019,200
uy19h,market_ae,0.484,0.0018,200
uy19h,gross_hh,0.3828,0.0018,200
uy19h,gross_sqrt,0.3667,0.0018,200
uy19h,gross_pc,0.4017,0.0015,200
uy19h,gross_oecdm,0.3708,0.0018,200
uy19h,gross_ae,0.3806,0.0017,200
uy19h,disp_hh,0.3828,0.0014,200
uy19h,disp_sqrt,0.3667,0.0016,200
uy19h,disp_pc,0.4017,0.0016,200
uy19h,disp_oecdm,0.3708,0.0016,200
uy19h,disp_ae,0.3806,0.0015,200
uy19h,con_hh,NaN,NA,200
uy19h,con_sqrt,NaN,NA,200
uy19h,con_pc,NaN,NA,200
uy19h,con_oecdm,NaN,NA,200
uy19h,con_ae,NaN,NA,200
[1] "Loading dataset uy22h..."
uy22h,market_hh,0.5361,0.0029,200
uy22h,market_sqrt,0.4939,0.0035,200
uy22h,market_pc,0.5144,0.0029,200
uy22h,market_oecdm,0.4979,0.0033,200
uy22h,market_ae,0.5031,0.0031,200
uy22h,gross_hh,0.3977,0.0025,200
uy22h,gross_sqrt,0.3829,0.003,200
uy22h,gross_pc,0.4134,0.0029,200
uy22h,gross_oecdm,0.3869,0.0028,200
uy22h,gross_ae,0.3952,0.003,200
uy22h,disp_hh,0.3977,0.0025,200
uy22h,disp_sqrt,0.3829,0.0032,200
uy22h,disp_pc,0.4134,0.0028,200
uy22h,disp_oecdm,0.3869,0.0027,200
uy22h,disp_ae,0.3952,0.003,200
uy22h,con_hh,NaN,NA,200
uy22h,con_sqrt,NaN,NA,200
uy22h,con_pc,NaN,NA,200
uy22h,con_oecdm,NaN,NA,200
uy22h,con_ae,NaN,NA,200
> 
> proc.time()
   user  system elapsed 
648.755   2.263 981.629 


