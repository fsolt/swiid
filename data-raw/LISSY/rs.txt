From: <postbox@lisdatacenter.org>
Subject: job 1362429 rs
Date: June 20, 2025 at 10:58:50 AM CDT
To: <fsolt@mac.com>

############################### NOTICE TO USERS ###############################
                                                                        Use of the data in the LUXEMBOURG INCOME STUDY DATABASES is governed by regulations which do not allow copying or further distribution of the survey microdata.                                                     

Anyone violating these regulations will lose all privileges to the databases and may be subject to prosecution under the law. In addition, any attempt to circumvent the LIS processing system or unauthorized entry into the LIS computing system will result in prosecution.             
All papers written using the LUXEMBOURG INCOME STUDY DATABASES must be  submitted for entry into the Working Papers Series. Users of the LIS or LWS microdata are required to cite the data source in their list of references.                   

Please consult our web site for more information at WWW.LISDATACENTER.ORG
                                                                        
############################### NOTICE TO USERS ###############################

> 
> 
> 
> 
> 
> 
> options(echo=FALSE, encoding="UTF-8")
Loading required package: readstata13
> 
> 
> options(error = expression(q('no')))
> ## Define functions 
> gini <- function(df, x) { 
+   df1 <- df[!is.na(df[[x]]), ] 
+   x <- as.vector(df1[[x]]) 
+   weight <- df1$wt 
+    
+   ox <- order(x) 
+   x <- as.vector(x)[ox] 
+   weight <- as.vector(weight)[ox] / sum(weight)  
+   p <- cumsum(weight) 
+   nu <- cumsum(weight * x) 
+   n <- length(nu) 
+   nu <- nu / nu[n] 
+   res <- round((sum(nu[-1] * p[-n]) - sum(nu[-n] * p[-1])), digits = 4) 
+   return(res) 
+ } 
>  
> wNtile <- function(var, wgt, split) { 
+   x <- var[order(var)] 
+   y <- wgt[order(var)] 
+   z <- cumsum(y) / sum(y) 
+   cop <- rep(NA, length(split))  
+   for (i in 1:length(cop)) { 
+     cop[i] <- x[Find(function(h) z[h] > split[i], seq_along(z))] 
+   } 
+   return(cop) 
+ } 
>  
> topBottom <- function(var, botline, topline) { 
+   tb <- ifelse(var < botline, botline, var) 
+   tb <- ifelse(tb > topline, topline, tb) 
+   return(tb) 
+ } 
>  
> setups <- function(df) { 
+   botline <- 0 
+   topline <- exp(log(wNtile(df$dhi, df$hpopwgt, 0.75)) + 3 * (log(wNtile(df$dhi, df$hpopwgt, 0.75)) - log(wNtile(df$dhi, df$hpopwgt, 0.25)))) 
+   df$oecdm <- 1 + .5 * (df$nhhmem - df$nhhmem13 - 1) + .3 * df$nhhmem13 
+   df$ae <- 1 + .7 * (df$nhhmem - df$nhhmem13 - 1) + .5 * df$nhhmem13 
+    
+   df$disp_hh <- topBottom(df$dhi, botline, topline) 
+   df$disp_sqrt <- df$disp_hh / (df$nhhmem ^ 0.5) 
+   df$disp_pc <- df$disp_hh / df$nhhmem 
+   df$disp_oecdm <- df$disp_hh / df$oecdm 
+   df$disp_ae <- df$disp_hh / df$ae 
+    
+   df$gross_hh <- topBottom(df$hitotal, botline, topline) 
+   df$gross_sqrt <- df$gross_hh / (df$nhhmem ^ 0.5) 
+   df$gross_pc <- df$gross_hh / df$nhhmem 
+   df$gross_oecdm <- df$gross_hh / df$oecdm 
+   df$gross_ae <- df$gross_hh / df$ae 
+    
+   df$market_hh <- topBottom(ifelse(!is.na(df$hiprivate), (df$hifactor + df$hiprivate), df$hifactor), botline, topline) 
+   df$market_sqrt <- df$market_hh / (df$nhhmem ^ 0.5) 
+   df$market_pc <- df$market_hh / df$nhhmem 
+   df$market_oecdm <- df$market_hh / df$oecdm 
+   df$market_ae <- df$market_hh / df$ae 
+    
+   df$con_hh <- topBottom(df$hcexp, botline, topline) 
+   df$con_sqrt <- df$con_hh / (df$nhhmem ^ 0.5) 
+   df$con_pc <- df$con_hh / df$nhhmem 
+   df$con_oecdm <- df$con_hh / df$oecdm 
+   df$con_ae <- df$con_hh / df$ae 
+    
+   return(df) 
+ } 
>  
> boot_gini_se <- function(data, var, reps=100) { 
+   data <- data[!is.na(data[[var]]), ] 
+   resamples <- lapply(1:reps, function(i) dplyr::sample_n(data, size = nrow(data), replace=TRUE)) 
+   r_stat <- lapply(resamples, function(x) gini(x, var)) 
+   std_err <- round(sqrt(var(unlist(r_stat))), digits = 4) 
+   return(std_err)    
+ } 
>  
> # For testing at home: 
> # read.LIS <- function(data_file, labels, vars) { 
> #   require(dplyr) 
> #   data_file <- stringr::str_replace(data_file, "h", "ih.dta") 
> #   df <- haven::read_dta(data_file)[, vars] 
> #   if (!labels) { 
> #     df <- df %>% dplyr::mutate_all(list(as.numeric)) 
> #   } 
> #   return(df) 
> # } 
>  
> get_ginis <- function(cc, reps = 100) { 
+   set.seed(324) 
+   ccs <- c("au", "at", "be", "br", "ca", "ci", "cl", "cn", "co", "cz", "dk",  
+            "do", "eg", "ee", "fi", "fr", "de", "ge", "gr", "gt", "hu", "is", "in", 
+            "ie", "il", "it", "jp", "lt", "lu", "ml", "mx", "nl", "no", "pa", "py",  
+            "pe", "pl", "ps", "ro", "ru", "rs", "sk", "si", "za", "kr", "es", "se",  
+            "ch", "tw", "uk", "us", "uy", "vn", 
+            "iq", "jo", "ps", "so", "sd", "tn")  
+   cc <- tolower(cc) 
+   if (!cc %in% ccs) { 
+     stop("Please specify a LIS country in iso2c format") 
+   } 
+   last_year_yy <- as.numeric(format(Sys.Date(), "%Y")) - 2001 
+   yy <- as.character(c(c(63:99), paste0("0", 0:9), c(10:last_year_yy))) 
+  
+   datasets <- paste0(rep(cc, each = length(yy)), rep(yy, times = length(cc)), "h") 
+   vars <- c("dhi", "hitotal", "hifactor", "hiprivate", "hcexp", "hpopwgt", "nhhmem", "nhhmem13", "grossnet") 
+  
+   v <- c("market_hh", "market_sqrt", "market_pc", "market_oecdm", "market_ae", 
+          "gross_hh", "gross_sqrt", "gross_pc", "gross_oecdm", "gross_ae", 
+          "disp_hh", "disp_sqrt", "disp_pc", "disp_oecdm", "disp_ae", 
+          "con_hh", "con_sqrt", "con_pc", "con_oecdm", "con_ae") 
+    
+   for (ccyy in datasets) { 
+     cat("") 
+     df <- try(read.LIS(ccyy, labels = FALSE, vars = vars), silent = TRUE) 
+     if (!class(df)[1] == "try-error") { 
+       mean_dhi <- mean(df$dhi, na.rm = TRUE) 
+       if (!is.nan(mean_dhi) & !mean_dhi == 0) { 
+         df <- setups(df) 
+         for (var in v) { 
+           if (grepl("hh", var)) { 
+             df$wt <- df$hpopwgt 
+           } else { 
+             df$wt <- df$hpopwgt * df$nhhmem 
+           } 
+           if (!is.na(mean(df[[var]], na.rm = TRUE))) { 
+             cat(paste(ccyy,  
+                       var,  
+                       gini(df, var), 
+                       boot_gini_se(df, var, reps = reps), 
+                       df$grossnet[1], 
+                       sep = ","), sep = "\n") 
+           } 
+         } 
+       } 
+     } 
+   } 
+ } 
>  
> # Call 
> get_ginis("rs") 
[1] "Loading dataset rs06h..."
rs06h,market_hh,0.557,0.0063,200
rs06h,market_sqrt,0.4734,0.0059,200
rs06h,market_pc,0.4894,0.0057,200
rs06h,market_oecdm,0.476,0.0052,200
rs06h,market_ae,0.4803,0.0056,200
rs06h,gross_hh,0.39,0.0042,200
rs06h,gross_sqrt,0.343,0.0049,200
rs06h,gross_pc,0.3627,0.005,200
rs06h,gross_oecdm,0.3429,0.0048,200
rs06h,gross_ae,0.3482,0.0038,200
rs06h,disp_hh,0.39,0.0046,200
rs06h,disp_sqrt,0.343,0.0047,200
rs06h,disp_pc,0.3627,0.0049,200
rs06h,disp_oecdm,0.3429,0.0047,200
rs06h,disp_ae,0.3482,0.0048,200
rs06h,con_hh,0.3447,0.0045,200
rs06h,con_sqrt,0.2816,0.004,200
rs06h,con_pc,0.2998,0.0041,200
rs06h,con_oecdm,0.282,0.0039,200
rs06h,con_ae,0.2862,0.0039,200
[1] "Loading dataset rs07h..."
rs07h,market_hh,0.573,0.0053,200
rs07h,market_sqrt,0.4877,0.0056,200
rs07h,market_pc,0.502,0.0057,200
rs07h,market_oecdm,0.4908,0.0059,200
rs07h,market_ae,0.4944,0.0051,200
rs07h,gross_hh,0.398,0.0051,200
rs07h,gross_sqrt,0.3491,0.0045,200
rs07h,gross_pc,0.366,0.0053,200
rs07h,gross_oecdm,0.349,0.0049,200
rs07h,gross_ae,0.3534,0.0051,200
rs07h,disp_hh,0.398,0.0043,200
rs07h,disp_sqrt,0.3491,0.0048,200
rs07h,disp_pc,0.366,0.005,200
rs07h,disp_oecdm,0.349,0.0042,200
rs07h,disp_ae,0.3534,0.0048,200
rs07h,con_hh,0.3464,0.0038,200
rs07h,con_sqrt,0.2749,0.0042,200
rs07h,con_pc,0.2899,0.0039,200
rs07h,con_oecdm,0.2745,0.0043,200
rs07h,con_ae,0.2778,0.004,200
[1] "Loading dataset rs08h..."
rs08h,market_hh,0.5726,0.0058,200
rs08h,market_sqrt,0.4784,0.0061,200
rs08h,market_pc,0.4933,0.006,200
rs08h,market_oecdm,0.4819,0.0064,200
rs08h,market_ae,0.4857,0.0055,200
rs08h,gross_hh,0.3887,0.0045,200
rs08h,gross_sqrt,0.3318,0.0048,200
rs08h,gross_pc,0.3451,0.0046,200
rs08h,gross_oecdm,0.3303,0.0049,200
rs08h,gross_ae,0.3336,0.0052,200
rs08h,disp_hh,0.3887,0.0043,200
rs08h,disp_sqrt,0.3318,0.0049,200
rs08h,disp_pc,0.3451,0.0049,200
rs08h,disp_oecdm,0.3303,0.0049,200
rs08h,disp_ae,0.3336,0.0049,200
rs08h,con_hh,0.3401,0.0041,200
rs08h,con_sqrt,0.2657,0.0037,200
rs08h,con_pc,0.2805,0.0035,200
rs08h,con_oecdm,0.2654,0.0034,200
rs08h,con_ae,0.2685,0.0037,200
[1] "Loading dataset rs09h..."
rs09h,market_hh,0.5886,0.0054,200
rs09h,market_sqrt,0.4908,0.0057,200
rs09h,market_pc,0.5058,0.006,200
rs09h,market_oecdm,0.4945,0.0061,200
rs09h,market_ae,0.4983,0.0057,200
rs09h,gross_hh,0.3843,0.0047,200
rs09h,gross_sqrt,0.3282,0.0047,200
rs09h,gross_pc,0.342,0.0044,200
rs09h,gross_oecdm,0.3266,0.0041,200
rs09h,gross_ae,0.3298,0.004,200
rs09h,disp_hh,0.3843,0.0044,200
rs09h,disp_sqrt,0.3282,0.0042,200
rs09h,disp_pc,0.342,0.0046,200
rs09h,disp_oecdm,0.3266,0.0042,200
rs09h,disp_ae,0.3298,0.004,200
rs09h,con_hh,0.345,0.0034,200
rs09h,con_sqrt,0.2725,0.004,200
rs09h,con_pc,0.288,0.0034,200
rs09h,con_oecdm,0.272,0.0038,200
rs09h,con_ae,0.2752,0.0038,200
[1] "Loading dataset rs10h..."
rs10h,market_hh,0.6127,0.0066,200
rs10h,market_sqrt,0.5151,0.0068,200
rs10h,market_pc,0.5278,0.0053,200
rs10h,market_oecdm,0.5181,0.0071,200
rs10h,market_ae,0.5212,0.0063,200
rs10h,gross_hh,0.3795,0.005,200
rs10h,gross_sqrt,0.3269,0.0061,200
rs10h,gross_pc,0.3426,0.0049,200
rs10h,gross_oecdm,0.3257,0.0045,200
rs10h,gross_ae,0.3295,0.0043,200
rs10h,disp_hh,0.3795,0.0043,200
rs10h,disp_sqrt,0.3269,0.0056,200
rs10h,disp_pc,0.3426,0.0046,200
rs10h,disp_oecdm,0.3257,0.0051,200
rs10h,disp_ae,0.3295,0.005,200
rs10h,con_hh,0.351,0.0037,200
rs10h,con_sqrt,0.2843,0.004,200
rs10h,con_pc,0.3008,0.0035,200
rs10h,con_oecdm,0.2839,0.0037,200
rs10h,con_ae,0.2876,0.0038,200
[1] "Loading dataset rs11h..."
rs11h,market_hh,0.6077,0.0066,200
rs11h,market_sqrt,0.5064,0.0066,200
rs11h,market_pc,0.5231,0.0068,200
rs11h,market_oecdm,0.5104,0.0075,200
rs11h,market_ae,0.5146,0.007,200
rs11h,gross_hh,0.3751,0.0046,200
rs11h,gross_sqrt,0.3231,0.0062,200
rs11h,gross_pc,0.3443,0.0051,200
rs11h,gross_oecdm,0.3239,0.0056,200
rs11h,gross_ae,0.3292,0.0066,200
rs11h,disp_hh,0.3751,0.0056,200
rs11h,disp_sqrt,0.3231,0.0052,200
rs11h,disp_pc,0.3443,0.0057,200
rs11h,disp_oecdm,0.3239,0.0059,200
rs11h,disp_ae,0.3292,0.0051,200
rs11h,con_hh,0.3292,0.0041,200
rs11h,con_sqrt,0.2603,0.0036,200
rs11h,con_pc,0.2838,0.0036,200
rs11h,con_oecdm,0.2617,0.0032,200
rs11h,con_ae,0.2672,0.0032,200
[1] "Loading dataset rs12h..."
rs12h,market_hh,0.6219,0.0054,200
rs12h,market_sqrt,0.525,0.0058,200
rs12h,market_pc,0.5365,0.0063,200
rs12h,market_oecdm,0.526,0.0059,200
rs12h,market_ae,0.5293,0.0065,200
rs12h,gross_hh,0.3805,0.0036,200
rs12h,gross_sqrt,0.3309,0.0055,200
rs12h,gross_pc,0.3481,0.0041,200
rs12h,gross_oecdm,0.3283,0.0048,200
rs12h,gross_ae,0.3331,0.0042,200
rs12h,disp_hh,0.3805,0.0048,200
rs12h,disp_sqrt,0.3309,0.0044,200
rs12h,disp_pc,0.3481,0.0047,200
rs12h,disp_oecdm,0.3283,0.004,200
rs12h,disp_ae,0.3331,0.0046,200
rs12h,con_hh,0.336,0.0038,200
rs12h,con_sqrt,0.2723,0.0039,200
rs12h,con_pc,0.2944,0.0042,200
rs12h,con_oecdm,0.2721,0.0031,200
rs12h,con_ae,0.2778,0.0035,200
[1] "Loading dataset rs13h..."
rs13h,market_hh,0.6191,0.0068,200
rs13h,market_sqrt,0.5317,0.0092,200
rs13h,market_pc,0.5463,0.0063,200
rs13h,market_oecdm,0.535,0.0081,200
rs13h,market_ae,0.5386,0.008,200
rs13h,gross_hh,0.3917,0.0054,200
rs13h,gross_sqrt,0.3444,0.0068,200
rs13h,gross_pc,0.3637,0.0064,200
rs13h,gross_oecdm,0.3446,0.0069,200
rs13h,gross_ae,0.3493,0.0069,200
rs13h,disp_hh,0.3917,0.0063,200
rs13h,disp_sqrt,0.3444,0.0074,200
rs13h,disp_pc,0.3637,0.0057,200
rs13h,disp_oecdm,0.3446,0.0072,200
rs13h,disp_ae,0.3493,0.007,200
rs13h,con_hh,0.3363,0.0038,200
rs13h,con_sqrt,0.2703,0.0035,200
rs13h,con_pc,0.2924,0.0036,200
rs13h,con_oecdm,0.2724,0.004,200
rs13h,con_ae,0.2773,0.0041,200
[1] "Loading dataset rs14h..."
rs14h,market_hh,0.6039,0.007,200
rs14h,market_sqrt,0.5161,0.0085,200
rs14h,market_pc,0.5331,0.0071,200
rs14h,market_oecdm,0.52,0.0071,200
rs14h,market_ae,0.5243,0.0064,200
rs14h,gross_hh,0.3904,0.006,200
rs14h,gross_sqrt,0.3438,0.0057,200
rs14h,gross_pc,0.3647,0.0052,200
rs14h,gross_oecdm,0.3439,0.0071,200
rs14h,gross_ae,0.3493,0.0059,200
rs14h,disp_hh,0.3904,0.0048,200
rs14h,disp_sqrt,0.3438,0.0064,200
rs14h,disp_pc,0.3647,0.0051,200
rs14h,disp_oecdm,0.3439,0.0065,200
rs14h,disp_ae,0.3493,0.0062,200
rs14h,con_hh,0.3311,0.0031,200
rs14h,con_sqrt,0.2664,0.003,200
rs14h,con_pc,0.292,0.0032,200
rs14h,con_oecdm,0.27,0.0031,200
rs14h,con_ae,0.2756,0.0032,200
[1] "Loading dataset rs15h..."
rs15h,market_hh,0.5932,0.0051,200
rs15h,market_sqrt,0.4984,0.0058,200
rs15h,market_pc,0.5159,0.0057,200
rs15h,market_oecdm,0.5022,0.0054,200
rs15h,market_ae,0.5066,0.005,200
rs15h,gross_hh,0.3865,0.0042,200
rs15h,gross_sqrt,0.3309,0.0049,200
rs15h,gross_pc,0.3488,0.0038,200
rs15h,gross_oecdm,0.3299,0.004,200
rs15h,gross_ae,0.3343,0.0041,200
rs15h,disp_hh,0.3865,0.0038,200
rs15h,disp_sqrt,0.3309,0.0047,200
rs15h,disp_pc,0.3488,0.0044,200
rs15h,disp_oecdm,0.3299,0.0045,200
rs15h,disp_ae,0.3343,0.0042,200
rs15h,con_hh,0.3368,0.0036,200
rs15h,con_sqrt,0.2606,0.0039,200
rs15h,con_pc,0.2813,0.0044,200
rs15h,con_oecdm,0.2615,0.0039,200
rs15h,con_ae,0.2659,0.0038,200
[1] "Loading dataset rs16h..."
rs16h,market_hh,0.5991,0.0054,200
rs16h,market_sqrt,0.4993,0.0065,200
rs16h,market_pc,0.519,0.0056,200
rs16h,market_oecdm,0.5038,0.0058,200
rs16h,market_ae,0.5089,0.0058,200
rs16h,gross_hh,0.3908,0.0044,200
rs16h,gross_sqrt,0.3276,0.0044,200
rs16h,gross_pc,0.3439,0.0042,200
rs16h,gross_oecdm,0.3256,0.004,200
rs16h,gross_ae,0.3295,0.0042,200
rs16h,disp_hh,0.3908,0.004,200
rs16h,disp_sqrt,0.3276,0.0048,200
rs16h,disp_pc,0.3439,0.0041,200
rs16h,disp_oecdm,0.3256,0.0047,200
rs16h,disp_ae,0.3295,0.004,200
rs16h,con_hh,0.3465,0.0031,200
rs16h,con_sqrt,0.2659,0.003,200
rs16h,con_pc,0.2861,0.0037,200
rs16h,con_oecdm,0.2664,0.0037,200
rs16h,con_ae,0.2706,0.0033,200
[1] "Loading dataset rs17h..."
rs17h,market_hh,0.5981,0.0048,200
rs17h,market_sqrt,0.4889,0.0059,200
rs17h,market_pc,0.5075,0.0053,200
rs17h,market_oecdm,0.4927,0.0051,200
rs17h,market_ae,0.4974,0.0048,200
rs17h,gross_hh,0.3776,0.0037,200
rs17h,gross_sqrt,0.3097,0.0045,200
rs17h,gross_pc,0.3226,0.0038,200
rs17h,gross_oecdm,0.3059,0.0039,200
rs17h,gross_ae,0.3088,0.0045,200
rs17h,disp_hh,0.3776,0.0039,200
rs17h,disp_sqrt,0.3097,0.0049,200
rs17h,disp_pc,0.3226,0.0045,200
rs17h,disp_oecdm,0.3059,0.0041,200
rs17h,disp_ae,0.3088,0.0038,200
rs17h,con_hh,0.3454,0.0029,200
rs17h,con_sqrt,0.2642,0.003,200
rs17h,con_pc,0.2807,0.0033,200
rs17h,con_oecdm,0.2631,0.0031,200
rs17h,con_ae,0.2662,0.0036,200
[1] "Loading dataset rs18h..."
rs18h,market_hh,0.6169,0.006,200
rs18h,market_sqrt,0.5154,0.0057,200
rs18h,market_pc,0.5311,0.006,200
rs18h,market_oecdm,0.5175,0.0057,200
rs18h,market_ae,0.5216,0.0068,200
rs18h,gross_hh,0.3964,0.0041,200
rs18h,gross_sqrt,0.334,0.0047,200
rs18h,gross_pc,0.3447,0.0049,200
rs18h,gross_oecdm,0.3299,0.0054,200
rs18h,gross_ae,0.3323,0.0048,200
rs18h,disp_hh,0.3964,0.0046,200
rs18h,disp_sqrt,0.334,0.0047,200
rs18h,disp_pc,0.3447,0.0052,200
rs18h,disp_oecdm,0.3299,0.0047,200
rs18h,disp_ae,0.3323,0.0057,200
rs18h,con_hh,0.3788,0.0037,200
rs18h,con_sqrt,0.299,0.0038,200
rs18h,con_pc,0.3013,0.0033,200
rs18h,con_oecdm,0.2931,0.0037,200
rs18h,con_ae,0.2924,0.003,200
[1] "Loading dataset rs19h..."
rs19h,market_hh,0.5954,0.0052,200
rs19h,market_sqrt,0.4841,0.0054,200
rs19h,market_pc,0.5057,0.0057,200
rs19h,market_oecdm,0.4887,0.0059,200
rs19h,market_ae,0.4943,0.0052,200
rs19h,gross_hh,0.3741,0.0037,200
rs19h,gross_sqrt,0.3,0.0038,200
rs19h,gross_pc,0.3127,0.0036,200
rs19h,gross_oecdm,0.2967,0.0039,200
rs19h,gross_ae,0.2993,0.0036,200
rs19h,disp_hh,0.3741,0.0033,200
rs19h,disp_sqrt,0.3,0.0042,200
rs19h,disp_pc,0.3127,0.0035,200
rs19h,disp_oecdm,0.2967,0.0038,200
rs19h,disp_ae,0.2993,0.0034,200
rs19h,con_hh,0.3714,0.0035,200
rs19h,con_sqrt,0.2882,0.0041,200
rs19h,con_pc,0.2908,0.0037,200
rs19h,con_oecdm,0.2838,0.0042,200
rs19h,con_ae,0.2828,0.0038,200
[1] "Loading dataset rs21h..."
rs21h,market_hh,0.6346,0.0055,200
rs21h,market_sqrt,0.5227,0.0063,200
rs21h,market_pc,0.5341,0.0058,200
rs21h,market_oecdm,0.5236,0.0066,200
rs21h,market_ae,0.5263,0.0072,200
rs21h,gross_hh,0.3939,0.0044,200
rs21h,gross_sqrt,0.3171,0.0056,200
rs21h,gross_pc,0.3199,0.0045,200
rs21h,gross_oecdm,0.3095,0.0049,200
rs21h,gross_ae,0.3092,0.0051,200
rs21h,disp_hh,0.3939,0.0042,200
rs21h,disp_sqrt,0.3171,0.0048,200
rs21h,disp_pc,0.3199,0.0048,200
rs21h,disp_oecdm,0.3095,0.0052,200
rs21h,disp_ae,0.3092,0.0048,200
rs21h,con_hh,0.3911,0.0049,200
rs21h,con_sqrt,0.3102,0.0052,200
rs21h,con_pc,0.2976,0.0046,200
rs21h,con_oecdm,0.299,0.0051,200
rs21h,con_ae,0.2939,0.0055,200
[1] "Loading dataset rs22h..."
rs22h,market_hh,0.6279,0.0056,200
rs22h,market_sqrt,0.5153,0.0066,200
rs22h,market_pc,0.5286,0.0061,200
rs22h,market_oecdm,0.5167,0.0066,200
rs22h,market_ae,0.5199,0.0072,200
rs22h,gross_hh,0.3886,0.0038,200
rs22h,gross_sqrt,0.3116,0.0041,200
rs22h,gross_pc,0.3174,0.0045,200
rs22h,gross_oecdm,0.3052,0.0043,200
rs22h,gross_ae,0.3056,0.004,200
rs22h,disp_hh,0.3886,0.0038,200
rs22h,disp_sqrt,0.3116,0.0045,200
rs22h,disp_pc,0.3174,0.004,200
rs22h,disp_oecdm,0.3052,0.0042,200
rs22h,disp_ae,0.3056,0.004,200
rs22h,con_hh,0.3825,0.0045,200
rs22h,con_sqrt,0.3001,0.0043,200
rs22h,con_pc,0.2918,0.0039,200
rs22h,con_oecdm,0.2898,0.0042,200
rs22h,con_ae,0.2858,0.0043,200
> 
> proc.time()
   user  system elapsed 
116.302   0.315 119.713 


