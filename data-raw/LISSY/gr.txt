From: <postbox@lisdatacenter.org>
Subject: job 1362396 gr
Date: June 20, 2025 at 10:24:33 AM CDT
To: <fsolt@mac.com>

############################### NOTICE TO USERS ###############################
                                                                        Use of the data in the LUXEMBOURG INCOME STUDY DATABASES is governed by regulations which do not allow copying or further distribution of the survey microdata.                                                     

Anyone violating these regulations will lose all privileges to the databases and may be subject to prosecution under the law. In addition, any attempt to circumvent the LIS processing system or unauthorized entry into the LIS computing system will result in prosecution.             
All papers written using the LUXEMBOURG INCOME STUDY DATABASES must be  submitted for entry into the Working Papers Series. Users of the LIS or LWS microdata are required to cite the data source in their list of references.                   

Please consult our web site for more information at WWW.LISDATACENTER.ORG
                                                                        
############################### NOTICE TO USERS ###############################

> 
> 
> 
> 
> 
> 
> options(echo=FALSE, encoding="UTF-8")
Loading required package: readstata13
> 
> 
> options(error = expression(q('no')))
> ## Define functions 
> gini <- function(df, x) { 
+   df1 <- df[!is.na(df[[x]]), ] 
+   x <- as.vector(df1[[x]]) 
+   weight <- df1$wt 
+    
+   ox <- order(x) 
+   x <- as.vector(x)[ox] 
+   weight <- as.vector(weight)[ox] / sum(weight)  
+   p <- cumsum(weight) 
+   nu <- cumsum(weight * x) 
+   n <- length(nu) 
+   nu <- nu / nu[n] 
+   res <- round((sum(nu[-1] * p[-n]) - sum(nu[-n] * p[-1])), digits = 4) 
+   return(res) 
+ } 
>  
> wNtile <- function(var, wgt, split) { 
+   x <- var[order(var)] 
+   y <- wgt[order(var)] 
+   z <- cumsum(y) / sum(y) 
+   cop <- rep(NA, length(split))  
+   for (i in 1:length(cop)) { 
+     cop[i] <- x[Find(function(h) z[h] > split[i], seq_along(z))] 
+   } 
+   return(cop) 
+ } 
>  
> topBottom <- function(var, botline, topline) { 
+   tb <- ifelse(var < botline, botline, var) 
+   tb <- ifelse(tb > topline, topline, tb) 
+   return(tb) 
+ } 
>  
> setups <- function(df) { 
+   botline <- 0 
+   topline <- exp(log(wNtile(df$dhi, df$hpopwgt, 0.75)) + 3 * (log(wNtile(df$dhi, df$hpopwgt, 0.75)) - log(wNtile(df$dhi, df$hpopwgt, 0.25)))) 
+   df$oecdm <- 1 + .5 * (df$nhhmem - df$nhhmem13 - 1) + .3 * df$nhhmem13 
+   df$ae <- 1 + .7 * (df$nhhmem - df$nhhmem13 - 1) + .5 * df$nhhmem13 
+    
+   df$disp_hh <- topBottom(df$dhi, botline, topline) 
+   df$disp_sqrt <- df$disp_hh / (df$nhhmem ^ 0.5) 
+   df$disp_pc <- df$disp_hh / df$nhhmem 
+   df$disp_oecdm <- df$disp_hh / df$oecdm 
+   df$disp_ae <- df$disp_hh / df$ae 
+    
+   df$gross_hh <- topBottom(df$hitotal, botline, topline) 
+   df$gross_sqrt <- df$gross_hh / (df$nhhmem ^ 0.5) 
+   df$gross_pc <- df$gross_hh / df$nhhmem 
+   df$gross_oecdm <- df$gross_hh / df$oecdm 
+   df$gross_ae <- df$gross_hh / df$ae 
+    
+   df$market_hh <- topBottom(ifelse(!is.na(df$hiprivate), (df$hifactor + df$hiprivate), df$hifactor), botline, topline) 
+   df$market_sqrt <- df$market_hh / (df$nhhmem ^ 0.5) 
+   df$market_pc <- df$market_hh / df$nhhmem 
+   df$market_oecdm <- df$market_hh / df$oecdm 
+   df$market_ae <- df$market_hh / df$ae 
+    
+   df$con_hh <- topBottom(df$hcexp, botline, topline) 
+   df$con_sqrt <- df$con_hh / (df$nhhmem ^ 0.5) 
+   df$con_pc <- df$con_hh / df$nhhmem 
+   df$con_oecdm <- df$con_hh / df$oecdm 
+   df$con_ae <- df$con_hh / df$ae 
+    
+   return(df) 
+ } 
>  
> boot_gini_se <- function(data, var, reps=100) { 
+   data <- data[!is.na(data[[var]]), ] 
+   resamples <- lapply(1:reps, function(i) dplyr::sample_n(data, size = nrow(data), replace=TRUE)) 
+   r_stat <- lapply(resamples, function(x) gini(x, var)) 
+   std_err <- round(sqrt(var(unlist(r_stat))), digits = 4) 
+   return(std_err)    
+ } 
>  
> # For testing at home: 
> # read.LIS <- function(data_file, labels, vars) { 
> #   require(dplyr) 
> #   data_file <- stringr::str_replace(data_file, "h", "ih.dta") 
> #   df <- haven::read_dta(data_file)[, vars] 
> #   if (!labels) { 
> #     df <- df %>% dplyr::mutate_all(list(as.numeric)) 
> #   } 
> #   return(df) 
> # } 
>  
> get_ginis <- function(cc, reps = 100) { 
+   set.seed(324) 
+   ccs <- c("au", "at", "be", "br", "ca", "ci", "cl", "cn", "co", "cz", "dk",  
+            "do", "eg", "ee", "fi", "fr", "de", "ge", "gr", "gt", "hu", "is", "in", 
+            "ie", "il", "it", "jp", "lt", "lu", "ml", "mx", "nl", "no", "pa", "py",  
+            "pe", "pl", "ps", "ro", "ru", "rs", "sk", "si", "za", "kr", "es", "se",  
+            "ch", "tw", "uk", "us", "uy", "vn", 
+            "iq", "jo", "ps", "so", "sd", "tn")  
+   cc <- tolower(cc) 
+   if (!cc %in% ccs) { 
+     stop("Please specify a LIS country in iso2c format") 
+   } 
+   last_year_yy <- as.numeric(format(Sys.Date(), "%Y")) - 2001 
+   yy <- as.character(c(c(63:99), paste0("0", 0:9), c(10:last_year_yy))) 
+  
+   datasets <- paste0(rep(cc, each = length(yy)), rep(yy, times = length(cc)), "h") 
+   vars <- c("dhi", "hitotal", "hifactor", "hiprivate", "hcexp", "hpopwgt", "nhhmem", "nhhmem13", "grossnet") 
+  
+   v <- c("market_hh", "market_sqrt", "market_pc", "market_oecdm", "market_ae", 
+          "gross_hh", "gross_sqrt", "gross_pc", "gross_oecdm", "gross_ae", 
+          "disp_hh", "disp_sqrt", "disp_pc", "disp_oecdm", "disp_ae", 
+          "con_hh", "con_sqrt", "con_pc", "con_oecdm", "con_ae") 
+    
+   for (ccyy in datasets) { 
+     cat("") 
+     df <- try(read.LIS(ccyy, labels = FALSE, vars = vars), silent = TRUE) 
+     if (!class(df)[1] == "try-error") { 
+       mean_dhi <- mean(df$dhi, na.rm = TRUE) 
+       if (!is.nan(mean_dhi) & !mean_dhi == 0) { 
+         df <- setups(df) 
+         for (var in v) { 
+           if (grepl("hh", var)) { 
+             df$wt <- df$hpopwgt 
+           } else { 
+             df$wt <- df$hpopwgt * df$nhhmem 
+           } 
+           if (!is.na(mean(df[[var]], na.rm = TRUE))) { 
+             cat(paste(ccyy,  
+                       var,  
+                       gini(df, var), 
+                       boot_gini_se(df, var, reps = reps), 
+                       df$grossnet[1], 
+                       sep = ","), sep = "\n") 
+           } 
+         } 
+       } 
+     } 
+   } 
+ } 
>  
> # Call 
> get_ginis("gr") 
[1] "Loading dataset gr95h..."
gr95h,market_hh,0.5521,0.0064,200
gr95h,market_sqrt,0.47,0.0061,200
gr95h,market_pc,0.4893,0.0069,200
gr95h,market_oecdm,0.4767,0.0066,200
gr95h,market_ae,0.4809,0.0072,200
gr95h,gross_hh,0.3978,0.0061,200
gr95h,gross_sqrt,0.3502,0.006,200
gr95h,gross_pc,0.3673,0.0056,200
gr95h,gross_oecdm,0.3528,0.0051,200
gr95h,gross_ae,0.3562,0.005,200
gr95h,disp_hh,0.3978,0.005,200
gr95h,disp_sqrt,0.3502,0.0046,200
gr95h,disp_pc,0.3673,0.0051,200
gr95h,disp_oecdm,0.3528,0.0057,200
gr95h,disp_ae,0.3562,0.0056,200
gr95h,con_hh,NaN,NA,200
gr95h,con_sqrt,NaN,NA,200
gr95h,con_pc,NaN,NA,200
gr95h,con_oecdm,NaN,NA,200
gr95h,con_ae,NaN,NA,200
[1] "Loading dataset gr00h..."
gr00h,market_hh,0.558,0.0072,200
gr00h,market_sqrt,0.4689,0.0073,200
gr00h,market_pc,0.4819,0.0073,200
gr00h,market_oecdm,0.4728,0.0068,200
gr00h,market_ae,0.4755,0.0061,200
gr00h,gross_hh,0.3914,0.0051,200
gr00h,gross_sqrt,0.3374,0.0057,200
gr00h,gross_pc,0.3454,0.0056,200
gr00h,gross_oecdm,0.3367,0.0052,200
gr00h,gross_ae,0.3377,0.0049,200
gr00h,disp_hh,0.3914,0.0059,200
gr00h,disp_sqrt,0.3374,0.0049,200
gr00h,disp_pc,0.3454,0.0058,200
gr00h,disp_oecdm,0.3367,0.0045,200
gr00h,disp_ae,0.3377,0.0057,200
gr00h,con_hh,NaN,NA,200
gr00h,con_sqrt,NaN,NA,200
gr00h,con_pc,NaN,NA,200
gr00h,con_oecdm,NaN,NA,200
gr00h,con_ae,NaN,NA,200
[1] "Loading dataset gr02h..."
gr02h,market_hh,0.535,0.0052,200
gr02h,market_sqrt,0.4678,0.0054,200
gr02h,market_pc,0.4852,0.0058,200
gr02h,market_oecdm,0.4726,0.0053,200
gr02h,market_ae,0.4765,0.005,200
gr02h,gross_hh,0.3839,0.0042,200
gr02h,gross_sqrt,0.3423,0.0047,200
gr02h,gross_pc,0.3578,0.0049,200
gr02h,gross_oecdm,0.3439,0.0052,200
gr02h,gross_ae,0.3471,0.0045,200
gr02h,disp_hh,0.3839,0.0037,200
gr02h,disp_sqrt,0.3423,0.0052,200
gr02h,disp_pc,0.3578,0.0044,200
gr02h,disp_oecdm,0.3439,0.0054,200
gr02h,disp_ae,0.3471,0.0053,200
gr02h,con_hh,NaN,NA,200
gr02h,con_sqrt,NaN,NA,200
gr02h,con_pc,NaN,NA,200
gr02h,con_oecdm,NaN,NA,200
gr02h,con_ae,NaN,NA,200
[1] "Loading dataset gr03h..."
gr03h,market_hh,0.5271,0.0047,200
gr03h,market_sqrt,0.4493,0.0051,200
gr03h,market_pc,0.4609,0.0056,200
gr03h,market_oecdm,0.4518,0.0052,200
gr03h,market_ae,0.454,0.0059,200
gr03h,gross_hh,0.3679,0.004,200
gr03h,gross_sqrt,0.3209,0.0049,200
gr03h,gross_pc,0.3298,0.0045,200
gr03h,gross_oecdm,0.3192,0.0042,200
gr03h,gross_ae,0.3205,0.0043,200
gr03h,disp_hh,0.3679,0.0045,200
gr03h,disp_sqrt,0.3209,0.0044,200
gr03h,disp_pc,0.3298,0.0042,200
gr03h,disp_oecdm,0.3192,0.0044,200
gr03h,disp_ae,0.3205,0.0042,200
gr03h,con_hh,NaN,NA,200
gr03h,con_sqrt,NaN,NA,200
gr03h,con_pc,NaN,NA,200
gr03h,con_oecdm,NaN,NA,200
gr03h,con_ae,NaN,NA,200
[1] "Loading dataset gr04h..."
gr04h,market_hh,0.5343,0.0062,200
gr04h,market_sqrt,0.4589,0.0055,200
gr04h,market_pc,0.4705,0.0063,200
gr04h,market_oecdm,0.4616,0.0056,200
gr04h,market_ae,0.4638,0.0055,200
gr04h,gross_hh,0.375,0.0045,200
gr04h,gross_sqrt,0.3298,0.005,200
gr04h,gross_pc,0.3379,0.0045,200
gr04h,gross_oecdm,0.3284,0.005,200
gr04h,gross_ae,0.3294,0.0045,200
gr04h,disp_hh,0.375,0.0049,200
gr04h,disp_sqrt,0.3298,0.0042,200
gr04h,disp_pc,0.3379,0.0052,200
gr04h,disp_oecdm,0.3284,0.0053,200
gr04h,disp_ae,0.3294,0.0051,200
gr04h,con_hh,NaN,NA,200
gr04h,con_sqrt,NaN,NA,200
gr04h,con_pc,NaN,NA,200
gr04h,con_oecdm,NaN,NA,200
gr04h,con_ae,NaN,NA,200
[1] "Loading dataset gr05h..."
gr05h,market_hh,0.5378,0.0055,200
gr05h,market_sqrt,0.4689,0.0057,200
gr05h,market_pc,0.4796,0.0064,200
gr05h,market_oecdm,0.4711,0.0072,200
gr05h,market_ae,0.4731,0.0063,200
gr05h,gross_hh,0.3823,0.0053,200
gr05h,gross_sqrt,0.3415,0.0054,200
gr05h,gross_pc,0.3487,0.0052,200
gr05h,gross_oecdm,0.3396,0.0051,200
gr05h,gross_ae,0.3404,0.005,200
gr05h,disp_hh,0.3823,0.0054,200
gr05h,disp_sqrt,0.3415,0.0055,200
gr05h,disp_pc,0.3487,0.0046,200
gr05h,disp_oecdm,0.3396,0.006,200
gr05h,disp_ae,0.3404,0.0049,200
gr05h,con_hh,NaN,NA,200
gr05h,con_sqrt,NaN,NA,200
gr05h,con_pc,NaN,NA,200
gr05h,con_oecdm,NaN,NA,200
gr05h,con_ae,NaN,NA,200
[1] "Loading dataset gr06h..."
gr06h,market_hh,0.5643,0.0056,120
gr06h,market_sqrt,0.4969,0.0067,120
gr06h,market_pc,0.5074,0.0071,120
gr06h,market_oecdm,0.4995,0.0068,120
gr06h,market_ae,0.5015,0.0053,120
gr06h,gross_hh,0.4239,0.0056,120
gr06h,gross_sqrt,0.3776,0.0054,120
gr06h,gross_pc,0.3818,0.0066,120
gr06h,gross_oecdm,0.3764,0.0063,120
gr06h,gross_ae,0.3763,0.0062,120
gr06h,disp_hh,0.3724,0.0053,120
gr06h,disp_sqrt,0.3297,0.0055,120
gr06h,disp_pc,0.3403,0.0049,120
gr06h,disp_oecdm,0.3281,0.0054,120
gr06h,disp_ae,0.33,0.0043,120
gr06h,con_hh,NaN,NA,120
gr06h,con_sqrt,NaN,NA,120
gr06h,con_pc,NaN,NA,120
gr06h,con_oecdm,NaN,NA,120
gr06h,con_ae,NaN,NA,120
[1] "Loading dataset gr07h..."
gr07h,market_hh,0.5611,0.0054,120
gr07h,market_sqrt,0.4948,0.0073,120
gr07h,market_pc,0.5056,0.0057,120
gr07h,market_oecdm,0.4972,0.0063,120
gr07h,market_ae,0.4992,0.0056,120
gr07h,gross_hh,0.4125,0.0056,120
gr07h,gross_sqrt,0.3679,0.0051,120
gr07h,gross_pc,0.3728,0.0052,120
gr07h,gross_oecdm,0.3669,0.0064,120
gr07h,gross_ae,0.3669,0.0059,120
gr07h,disp_hh,0.3627,0.005,120
gr07h,disp_sqrt,0.3212,0.0057,120
gr07h,disp_pc,0.3331,0.0052,120
gr07h,disp_oecdm,0.3201,0.0051,120
gr07h,disp_ae,0.3222,0.0053,120
gr07h,con_hh,NaN,NA,120
gr07h,con_sqrt,NaN,NA,120
gr07h,con_pc,NaN,NA,120
gr07h,con_oecdm,NaN,NA,120
gr07h,con_ae,NaN,NA,120
[1] "Loading dataset gr08h..."
gr08h,market_hh,0.5764,0.0059,120
gr08h,market_sqrt,0.5034,0.0058,120
gr08h,market_pc,0.5117,0.0063,120
gr08h,market_oecdm,0.5038,0.0058,120
gr08h,market_ae,0.5054,0.0057,120
gr08h,gross_hh,0.4209,0.005,120
gr08h,gross_sqrt,0.3714,0.005,120
gr08h,gross_pc,0.3717,0.0057,120
gr08h,gross_oecdm,0.3673,0.0062,120
gr08h,gross_ae,0.3663,0.0061,120
gr08h,disp_hh,0.3743,0.0047,120
gr08h,disp_sqrt,0.3287,0.0046,120
gr08h,disp_pc,0.3355,0.0048,120
gr08h,disp_oecdm,0.3242,0.0054,120
gr08h,disp_ae,0.3252,0.005,120
gr08h,con_hh,NaN,NA,120
gr08h,con_sqrt,NaN,NA,120
gr08h,con_pc,NaN,NA,120
gr08h,con_oecdm,NaN,NA,120
gr08h,con_ae,NaN,NA,120
[1] "Loading dataset gr09h..."
gr09h,market_hh,0.5682,0.0073,120
gr09h,market_sqrt,0.4979,0.0089,120
gr09h,market_pc,0.5059,0.0097,120
gr09h,market_oecdm,0.4986,0.0097,120
gr09h,market_ae,0.5,0.009,120
gr09h,gross_hh,0.4123,0.009,120
gr09h,gross_sqrt,0.3631,0.009,120
gr09h,gross_pc,0.3637,0.0085,120
gr09h,gross_oecdm,0.3592,0.0079,120
gr09h,gross_ae,0.3582,0.0077,120
gr09h,disp_hh,0.3672,0.0069,120
gr09h,disp_sqrt,0.3212,0.0075,120
gr09h,disp_pc,0.3278,0.0064,120
gr09h,disp_oecdm,0.3168,0.0074,120
gr09h,disp_ae,0.3177,0.0078,120
gr09h,con_hh,NaN,NA,120
gr09h,con_sqrt,NaN,NA,120
gr09h,con_pc,NaN,NA,120
gr09h,con_oecdm,NaN,NA,120
gr09h,con_ae,NaN,NA,120
[1] "Loading dataset gr10h..."
gr10h,market_hh,0.5862,0.0078,120
gr10h,market_sqrt,0.5197,0.0085,120
gr10h,market_pc,0.5308,0.008,120
gr10h,market_oecdm,0.5218,0.0081,120
gr10h,market_ae,0.524,0.0075,120
gr10h,gross_hh,0.3976,0.0065,120
gr10h,gross_sqrt,0.3548,0.0066,120
gr10h,gross_pc,0.3611,0.0064,120
gr10h,gross_oecdm,0.3526,0.0055,120
gr10h,gross_ae,0.3532,0.0063,120
gr10h,disp_hh,0.3626,0.0056,120
gr10h,disp_sqrt,0.3218,0.0063,120
gr10h,disp_pc,0.3331,0.006,120
gr10h,disp_oecdm,0.3196,0.0061,120
gr10h,disp_ae,0.3217,0.0053,120
gr10h,con_hh,NaN,NA,120
gr10h,con_sqrt,NaN,NA,120
gr10h,con_pc,NaN,NA,120
gr10h,con_oecdm,NaN,NA,120
gr10h,con_ae,NaN,NA,120
[1] "Loading dataset gr11h..."
gr11h,market_hh,0.6086,0.0073,120
gr11h,market_sqrt,0.5444,0.0084,120
gr11h,market_pc,0.5533,0.0096,120
gr11h,market_oecdm,0.5473,0.0096,120
gr11h,market_ae,0.5485,0.0086,120
gr11h,gross_hh,0.4062,0.0075,120
gr11h,gross_sqrt,0.3699,0.0084,120
gr11h,gross_pc,0.3755,0.0084,120
gr11h,gross_oecdm,0.3699,0.0081,120
gr11h,gross_ae,0.3696,0.0088,120
gr11h,disp_hh,0.3545,0.0061,120
gr11h,disp_sqrt,0.3236,0.0063,120
gr11h,disp_pc,0.3387,0.006,120
gr11h,disp_oecdm,0.3235,0.0074,120
gr11h,disp_ae,0.3263,0.0061,120
gr11h,con_hh,NaN,NA,120
gr11h,con_sqrt,NaN,NA,120
gr11h,con_pc,NaN,NA,120
gr11h,con_oecdm,NaN,NA,120
gr11h,con_ae,NaN,NA,120
[1] "Loading dataset gr12h..."
gr12h,market_hh,0.6244,0.0064,120
gr12h,market_sqrt,0.5579,0.0079,120
gr12h,market_pc,0.5796,0.0073,120
gr12h,market_oecdm,0.5652,0.0077,120
gr12h,market_ae,0.5701,0.0085,120
gr12h,gross_hh,0.4097,0.0063,120
gr12h,gross_sqrt,0.3711,0.0072,120
gr12h,gross_pc,0.3899,0.0066,120
gr12h,gross_oecdm,0.3747,0.0081,120
gr12h,gross_ae,0.3784,0.0072,120
gr12h,disp_hh,0.3636,0.006,120
gr12h,disp_sqrt,0.3303,0.0061,120
gr12h,disp_pc,0.3585,0.0062,120
gr12h,disp_oecdm,0.334,0.0073,120
gr12h,disp_ae,0.3407,0.0065,120
gr12h,con_hh,NaN,NA,120
gr12h,con_sqrt,NaN,NA,120
gr12h,con_pc,NaN,NA,120
gr12h,con_oecdm,NaN,NA,120
gr12h,con_ae,NaN,NA,120
[1] "Loading dataset gr13h..."
gr13h,market_hh,0.6267,0.007,120
gr13h,market_sqrt,0.5612,0.0073,120
gr13h,market_pc,0.5767,0.0069,120
gr13h,market_oecdm,0.5662,0.0072,120
gr13h,market_ae,0.5694,0.0068,120
gr13h,gross_hh,0.4138,0.0059,120
gr13h,gross_sqrt,0.3777,0.0072,120
gr13h,gross_pc,0.3899,0.006,120
gr13h,gross_oecdm,0.3789,0.0072,120
gr13h,gross_ae,0.3807,0.0059,120
gr13h,disp_hh,0.3725,0.0055,120
gr13h,disp_sqrt,0.3417,0.0065,120
gr13h,disp_pc,0.3615,0.0061,120
gr13h,disp_oecdm,0.3428,0.0054,120
gr13h,disp_ae,0.3471,0.0063,120
gr13h,con_hh,NaN,NA,120
gr13h,con_sqrt,NaN,NA,120
gr13h,con_pc,NaN,NA,120
gr13h,con_oecdm,NaN,NA,120
gr13h,con_ae,NaN,NA,120
[1] "Loading dataset gr14h..."
gr14h,market_hh,0.624,0.0044,120
gr14h,market_sqrt,0.5535,0.0044,120
gr14h,market_pc,0.5705,0.0045,120
gr14h,market_oecdm,0.5585,0.0049,120
gr14h,market_ae,0.5623,0.0047,120
gr14h,gross_hh,0.4065,0.0045,120
gr14h,gross_sqrt,0.3661,0.0045,120
gr14h,gross_pc,0.3796,0.0051,120
gr14h,gross_oecdm,0.3671,0.005,120
gr14h,gross_ae,0.3694,0.0046,120
gr14h,disp_hh,0.3688,0.0044,120
gr14h,disp_sqrt,0.3342,0.0036,120
gr14h,disp_pc,0.3569,0.0042,120
gr14h,disp_oecdm,0.3355,0.004,120
gr14h,disp_ae,0.3409,0.004,120
gr14h,con_hh,NaN,NA,120
gr14h,con_sqrt,NaN,NA,120
gr14h,con_pc,NaN,NA,120
gr14h,con_oecdm,NaN,NA,120
gr14h,con_ae,NaN,NA,120
[1] "Loading dataset gr15h..."
gr15h,market_hh,0.629,0.0042,120
gr15h,market_sqrt,0.5592,0.0045,120
gr15h,market_pc,0.5758,0.0045,120
gr15h,market_oecdm,0.5632,0.0049,120
gr15h,market_ae,0.5672,0.0049,120
gr15h,gross_hh,0.4077,0.0045,120
gr15h,gross_sqrt,0.3712,0.0043,120
gr15h,gross_pc,0.3852,0.0046,120
gr15h,gross_oecdm,0.3714,0.0043,120
gr15h,gross_ae,0.3742,0.0046,120
gr15h,disp_hh,0.3697,0.004,120
gr15h,disp_sqrt,0.3392,0.0041,120
gr15h,disp_pc,0.3618,0.0043,120
gr15h,disp_oecdm,0.3397,0.0036,120
gr15h,disp_ae,0.3454,0.0033,120
gr15h,con_hh,NaN,NA,120
gr15h,con_sqrt,NaN,NA,120
gr15h,con_pc,NaN,NA,120
gr15h,con_oecdm,NaN,NA,120
gr15h,con_ae,NaN,NA,120
[1] "Loading dataset gr16h..."
gr16h,market_hh,0.6071,0.0037,120
gr16h,market_sqrt,0.5309,0.0048,120
gr16h,market_pc,0.5473,0.004,120
gr16h,market_oecdm,0.5338,0.0043,120
gr16h,market_ae,0.5379,0.0045,120
gr16h,gross_hh,0.3862,0.0047,120
gr16h,gross_sqrt,0.3452,0.0053,120
gr16h,gross_pc,0.3595,0.0036,120
gr16h,gross_oecdm,0.3439,0.0034,120
gr16h,gross_ae,0.347,0.0038,120
gr16h,disp_hh,0.366,0.0049,120
gr16h,disp_sqrt,0.3327,0.0056,120
gr16h,disp_pc,0.3528,0.0036,120
gr16h,disp_oecdm,0.3316,0.0032,120
gr16h,disp_ae,0.3367,0.0036,120
gr16h,con_hh,NaN,NA,120
gr16h,con_sqrt,NaN,NA,120
gr16h,con_pc,NaN,NA,120
gr16h,con_oecdm,NaN,NA,120
gr16h,con_ae,NaN,NA,120
[1] "Loading dataset gr17h..."
gr17h,market_hh,0.6,0.0036,120
gr17h,market_sqrt,0.5213,0.004,120
gr17h,market_pc,0.5441,0.0037,120
gr17h,market_oecdm,0.5276,0.0037,120
gr17h,market_ae,0.5331,0.0034,120
gr17h,gross_hh,0.3796,0.0029,120
gr17h,gross_sqrt,0.3347,0.0032,120
gr17h,gross_pc,0.355,0.0032,120
gr17h,gross_oecdm,0.3364,0.0032,120
gr17h,gross_ae,0.3408,0.0034,120
gr17h,disp_hh,0.3576,0.0029,120
gr17h,disp_sqrt,0.3198,0.0034,120
gr17h,disp_pc,0.3467,0.003,120
gr17h,disp_oecdm,0.3221,0.0035,120
gr17h,disp_ae,0.3286,0.0036,120
gr17h,con_hh,NaN,NA,120
gr17h,con_sqrt,NaN,NA,120
gr17h,con_pc,NaN,NA,120
gr17h,con_oecdm,NaN,NA,120
gr17h,con_ae,NaN,NA,120
[1] "Loading dataset gr18h..."
gr18h,market_hh,0.5911,0.0043,120
gr18h,market_sqrt,0.5111,0.0051,120
gr18h,market_pc,0.5346,0.0041,120
gr18h,market_oecdm,0.5171,0.0046,120
gr18h,market_ae,0.5228,0.0053,120
gr18h,gross_hh,0.3655,0.0034,120
gr18h,gross_sqrt,0.3193,0.0038,120
gr18h,gross_pc,0.3429,0.0039,120
gr18h,gross_oecdm,0.3215,0.0039,120
gr18h,gross_ae,0.3268,0.0043,120
gr18h,disp_hh,0.3443,0.003,120
gr18h,disp_sqrt,0.3002,0.0039,120
gr18h,disp_pc,0.3278,0.004,120
gr18h,disp_oecdm,0.3028,0.0043,120
gr18h,disp_ae,0.3093,0.0041,120
gr18h,con_hh,NaN,NA,120
gr18h,con_sqrt,NaN,NA,120
gr18h,con_pc,NaN,NA,120
gr18h,con_oecdm,NaN,NA,120
gr18h,con_ae,NaN,NA,120
[1] "Loading dataset gr19h..."
gr19h,market_hh,0.5975,0.0042,120
gr19h,market_sqrt,0.516,0.0049,120
gr19h,market_pc,0.5352,0.0049,120
gr19h,market_oecdm,0.5208,0.0049,120
gr19h,market_ae,0.5253,0.0048,120
gr19h,gross_hh,0.3747,0.0037,120
gr19h,gross_sqrt,0.3304,0.0043,120
gr19h,gross_pc,0.349,0.0048,120
gr19h,gross_oecdm,0.3309,0.0046,120
gr19h,gross_ae,0.335,0.0037,120
gr19h,disp_hh,0.3518,0.0037,120
gr19h,disp_sqrt,0.3077,0.0041,120
gr19h,disp_pc,0.3307,0.0038,120
gr19h,disp_oecdm,0.3086,0.0036,120
gr19h,disp_ae,0.314,0.004,120
gr19h,con_hh,NaN,NA,120
gr19h,con_sqrt,NaN,NA,120
gr19h,con_pc,NaN,NA,120
gr19h,con_oecdm,NaN,NA,120
gr19h,con_ae,NaN,NA,120
[1] "Loading dataset gr20h..."
gr20h,market_hh,0.599,0.0043,120
gr20h,market_sqrt,0.5198,0.0061,120
gr20h,market_pc,0.538,0.0044,120
gr20h,market_oecdm,0.524,0.0056,120
gr20h,market_ae,0.5283,0.0056,120
gr20h,gross_hh,0.3758,0.0043,120
gr20h,gross_sqrt,0.3326,0.0044,120
gr20h,gross_pc,0.3519,0.0037,120
gr20h,gross_oecdm,0.3331,0.005,120
gr20h,gross_ae,0.3375,0.0048,120
gr20h,disp_hh,0.3587,0.0042,120
gr20h,disp_sqrt,0.3159,0.0044,120
gr20h,disp_pc,0.3382,0.0038,120
gr20h,disp_oecdm,0.3168,0.0042,120
gr20h,disp_ae,0.3219,0.004,120
gr20h,con_hh,NaN,NA,120
gr20h,con_sqrt,NaN,NA,120
gr20h,con_pc,NaN,NA,120
gr20h,con_oecdm,NaN,NA,120
gr20h,con_ae,NaN,NA,120
[1] "Loading dataset gr21h..."
gr21h,market_hh,0.5842,0.0049,120
gr21h,market_sqrt,0.5007,0.006,120
gr21h,market_pc,0.5171,0.0055,120
gr21h,market_oecdm,0.5036,0.0068,120
gr21h,market_ae,0.5075,0.006,120
gr21h,gross_hh,0.3794,0.0041,120
gr21h,gross_sqrt,0.329,0.0054,120
gr21h,gross_pc,0.3434,0.0048,120
gr21h,gross_oecdm,0.3282,0.0049,120
gr21h,gross_ae,0.3309,0.0043,120
gr21h,disp_hh,0.3555,0.0039,120
gr21h,disp_sqrt,0.3077,0.0046,120
gr21h,disp_pc,0.3272,0.0046,120
gr21h,disp_oecdm,0.3076,0.0049,120
gr21h,disp_ae,0.3118,0.0045,120
gr21h,con_hh,NaN,NA,120
gr21h,con_sqrt,NaN,NA,120
gr21h,con_pc,NaN,NA,120
gr21h,con_oecdm,NaN,NA,120
gr21h,con_ae,NaN,NA,120
> 
> proc.time()
   user  system elapsed 
261.837   0.659 265.841 


