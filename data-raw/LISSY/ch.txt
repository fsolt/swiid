From: <postbox@lisdatacenter.org>
Subject: job 1362439 ch
Date: June 20, 2025 at 11:08:32 AM CDT
To: <fsolt@mac.com>

############################### NOTICE TO USERS ###############################
                                                                        Use of the data in the LUXEMBOURG INCOME STUDY DATABASES is governed by regulations which do not allow copying or further distribution of the survey microdata.                                                     

Anyone violating these regulations will lose all privileges to the databases and may be subject to prosecution under the law. In addition, any attempt to circumvent the LIS processing system or unauthorized entry into the LIS computing system will result in prosecution.             
All papers written using the LUXEMBOURG INCOME STUDY DATABASES must be  submitted for entry into the Working Papers Series. Users of the LIS or LWS microdata are required to cite the data source in their list of references.                   

Please consult our web site for more information at WWW.LISDATACENTER.ORG
                                                                        
############################### NOTICE TO USERS ###############################

> 
> 
> 
> 
> 
> 
> options(echo=FALSE, encoding="UTF-8")
Loading required package: readstata13
> 
> 
> options(error = expression(q('no')))
> ## Define functions 
> gini <- function(df, x) { 
+   df1 <- df[!is.na(df[[x]]), ] 
+   x <- as.vector(df1[[x]]) 
+   weight <- df1$wt 
+    
+   ox <- order(x) 
+   x <- as.vector(x)[ox] 
+   weight <- as.vector(weight)[ox] / sum(weight)  
+   p <- cumsum(weight) 
+   nu <- cumsum(weight * x) 
+   n <- length(nu) 
+   nu <- nu / nu[n] 
+   res <- round((sum(nu[-1] * p[-n]) - sum(nu[-n] * p[-1])), digits = 4) 
+   return(res) 
+ } 
>  
> wNtile <- function(var, wgt, split) { 
+   x <- var[order(var)] 
+   y <- wgt[order(var)] 
+   z <- cumsum(y) / sum(y) 
+   cop <- rep(NA, length(split))  
+   for (i in 1:length(cop)) { 
+     cop[i] <- x[Find(function(h) z[h] > split[i], seq_along(z))] 
+   } 
+   return(cop) 
+ } 
>  
> topBottom <- function(var, botline, topline) { 
+   tb <- ifelse(var < botline, botline, var) 
+   tb <- ifelse(tb > topline, topline, tb) 
+   return(tb) 
+ } 
>  
> setups <- function(df) { 
+   botline <- 0 
+   topline <- exp(log(wNtile(df$dhi, df$hpopwgt, 0.75)) + 3 * (log(wNtile(df$dhi, df$hpopwgt, 0.75)) - log(wNtile(df$dhi, df$hpopwgt, 0.25)))) 
+   df$oecdm <- 1 + .5 * (df$nhhmem - df$nhhmem13 - 1) + .3 * df$nhhmem13 
+   df$ae <- 1 + .7 * (df$nhhmem - df$nhhmem13 - 1) + .5 * df$nhhmem13 
+    
+   df$disp_hh <- topBottom(df$dhi, botline, topline) 
+   df$disp_sqrt <- df$disp_hh / (df$nhhmem ^ 0.5) 
+   df$disp_pc <- df$disp_hh / df$nhhmem 
+   df$disp_oecdm <- df$disp_hh / df$oecdm 
+   df$disp_ae <- df$disp_hh / df$ae 
+    
+   df$gross_hh <- topBottom(df$hitotal, botline, topline) 
+   df$gross_sqrt <- df$gross_hh / (df$nhhmem ^ 0.5) 
+   df$gross_pc <- df$gross_hh / df$nhhmem 
+   df$gross_oecdm <- df$gross_hh / df$oecdm 
+   df$gross_ae <- df$gross_hh / df$ae 
+    
+   df$market_hh <- topBottom(ifelse(!is.na(df$hiprivate), (df$hifactor + df$hiprivate), df$hifactor), botline, topline) 
+   df$market_sqrt <- df$market_hh / (df$nhhmem ^ 0.5) 
+   df$market_pc <- df$market_hh / df$nhhmem 
+   df$market_oecdm <- df$market_hh / df$oecdm 
+   df$market_ae <- df$market_hh / df$ae 
+    
+   df$con_hh <- topBottom(df$hcexp, botline, topline) 
+   df$con_sqrt <- df$con_hh / (df$nhhmem ^ 0.5) 
+   df$con_pc <- df$con_hh / df$nhhmem 
+   df$con_oecdm <- df$con_hh / df$oecdm 
+   df$con_ae <- df$con_hh / df$ae 
+    
+   return(df) 
+ } 
>  
> boot_gini_se <- function(data, var, reps=100) { 
+   data <- data[!is.na(data[[var]]), ] 
+   resamples <- lapply(1:reps, function(i) dplyr::sample_n(data, size = nrow(data), replace=TRUE)) 
+   r_stat <- lapply(resamples, function(x) gini(x, var)) 
+   std_err <- round(sqrt(var(unlist(r_stat))), digits = 4) 
+   return(std_err)    
+ } 
>  
> # For testing at home: 
> # read.LIS <- function(data_file, labels, vars) { 
> #   require(dplyr) 
> #   data_file <- stringr::str_replace(data_file, "h", "ih.dta") 
> #   df <- haven::read_dta(data_file)[, vars] 
> #   if (!labels) { 
> #     df <- df %>% dplyr::mutate_all(list(as.numeric)) 
> #   } 
> #   return(df) 
> # } 
>  
> get_ginis <- function(cc, reps = 100) { 
+   set.seed(324) 
+   ccs <- c("au", "at", "be", "br", "ca", "ci", "cl", "cn", "co", "cz", "dk",  
+            "do", "eg", "ee", "fi", "fr", "de", "ge", "gr", "gt", "hu", "is", "in", 
+            "ie", "il", "it", "jp", "lt", "lu", "ml", "mx", "nl", "no", "pa", "py",  
+            "pe", "pl", "ps", "ro", "ru", "rs", "sk", "si", "za", "kr", "es", "se",  
+            "ch", "tw", "uk", "us", "uy", "vn", 
+            "iq", "jo", "ps", "so", "sd", "tn")  
+   cc <- tolower(cc) 
+   if (!cc %in% ccs) { 
+     stop("Please specify a LIS country in iso2c format") 
+   } 
+   last_year_yy <- as.numeric(format(Sys.Date(), "%Y")) - 2001 
+   yy <- as.character(c(c(63:99), paste0("0", 0:9), c(10:last_year_yy))) 
+  
+   datasets <- paste0(rep(cc, each = length(yy)), rep(yy, times = length(cc)), "h") 
+   vars <- c("dhi", "hitotal", "hifactor", "hiprivate", "hcexp", "hpopwgt", "nhhmem", "nhhmem13", "grossnet") 
+  
+   v <- c("market_hh", "market_sqrt", "market_pc", "market_oecdm", "market_ae", 
+          "gross_hh", "gross_sqrt", "gross_pc", "gross_oecdm", "gross_ae", 
+          "disp_hh", "disp_sqrt", "disp_pc", "disp_oecdm", "disp_ae", 
+          "con_hh", "con_sqrt", "con_pc", "con_oecdm", "con_ae") 
+    
+   for (ccyy in datasets) { 
+     cat("") 
+     df <- try(read.LIS(ccyy, labels = FALSE, vars = vars), silent = TRUE) 
+     if (!class(df)[1] == "try-error") { 
+       mean_dhi <- mean(df$dhi, na.rm = TRUE) 
+       if (!is.nan(mean_dhi) & !mean_dhi == 0) { 
+         df <- setups(df) 
+         for (var in v) { 
+           if (grepl("hh", var)) { 
+             df$wt <- df$hpopwgt 
+           } else { 
+             df$wt <- df$hpopwgt * df$nhhmem 
+           } 
+           if (!is.na(mean(df[[var]], na.rm = TRUE))) { 
+             cat(paste(ccyy,  
+                       var,  
+                       gini(df, var), 
+                       boot_gini_se(df, var, reps = reps), 
+                       df$grossnet[1], 
+                       sep = ","), sep = "\n") 
+           } 
+         } 
+       } 
+     } 
+   } 
+ } 
>  
> # Call 
> get_ginis("ch") 
[1] "Loading dataset ch82h..."
ch82h,market_hh,0.4826,0.0058,100
ch82h,market_sqrt,0.4028,0.0048,100
ch82h,market_pc,0.4405,0.0047,100
ch82h,gross_hh,0.3974,0.0052,100
ch82h,gross_sqrt,0.3348,0.0056,100
ch82h,gross_pc,0.3696,0.0045,100
ch82h,disp_hh,0.3782,0.0055,100
ch82h,disp_sqrt,0.3161,0.0058,100
ch82h,disp_pc,0.3542,0.0057,100
ch82h,con_hh,NaN,NA,100
ch82h,con_sqrt,NaN,NA,100
ch82h,con_pc,NaN,NA,100
[1] "Loading dataset ch92h..."
ch92h,market_hh,0.4748,0.006,100
ch92h,market_sqrt,0.4065,0.0062,100
ch92h,market_pc,0.4391,0.0063,100
ch92h,market_oecdm,0.4054,0.0067,100
ch92h,market_ae,0.4149,0.0063,100
ch92h,gross_hh,0.3663,0.0053,100
ch92h,gross_sqrt,0.3252,0.0055,100
ch92h,gross_pc,0.3631,0.0049,100
ch92h,gross_oecdm,0.3226,0.0061,100
ch92h,gross_ae,0.3334,0.0053,100
ch92h,disp_hh,0.3524,0.006,100
ch92h,disp_sqrt,0.3118,0.0062,100
ch92h,disp_pc,0.3522,0.0057,100
ch92h,disp_oecdm,0.3094,0.0064,100
ch92h,disp_ae,0.3208,0.0059,100
ch92h,con_hh,NaN,NA,100
ch92h,con_sqrt,NaN,NA,100
ch92h,con_pc,NaN,NA,100
ch92h,con_oecdm,NaN,NA,100
ch92h,con_ae,NaN,NA,100
[1] "Loading dataset ch00h..."
ch00h,market_hh,0.4499,0.0071,100
ch00h,market_sqrt,0.3901,0.0071,100
ch00h,market_pc,0.4384,0.0062,100
ch00h,market_oecdm,0.393,0.0062,100
ch00h,market_ae,0.408,0.0064,100
ch00h,gross_hh,0.3162,0.0052,100
ch00h,gross_sqrt,0.2784,0.005,100
ch00h,gross_pc,0.3293,0.0053,100
ch00h,gross_oecdm,0.28,0.0056,100
ch00h,gross_ae,0.295,0.0048,100
ch00h,disp_hh,0.3189,0.0061,100
ch00h,disp_sqrt,0.2814,0.0052,100
ch00h,disp_pc,0.3324,0.0065,100
ch00h,disp_oecdm,0.2828,0.0056,100
ch00h,disp_ae,0.2979,0.005,100
ch00h,con_hh,0.3152,0.0084,100
ch00h,con_sqrt,0.2899,0.0063,100
ch00h,con_pc,0.3494,0.0079,100
ch00h,con_oecdm,0.2957,0.0074,100
ch00h,con_ae,0.3129,0.0078,100
[1] "Loading dataset ch02h..."
ch02h,market_hh,0.4582,0.0071,100
ch02h,market_sqrt,0.3954,0.0069,100
ch02h,market_pc,0.4385,0.0053,100
ch02h,market_oecdm,0.396,0.0059,100
ch02h,market_ae,0.4098,0.0064,100
ch02h,gross_hh,0.3132,0.0057,100
ch02h,gross_sqrt,0.2747,0.0051,100
ch02h,gross_pc,0.3197,0.0046,100
ch02h,gross_oecdm,0.2734,0.0052,100
ch02h,gross_ae,0.2872,0.0045,100
ch02h,disp_hh,0.3114,0.005,100
ch02h,disp_sqrt,0.273,0.0051,100
ch02h,disp_pc,0.319,0.0043,100
ch02h,disp_oecdm,0.2719,0.0048,100
ch02h,disp_ae,0.2859,0.0055,100
ch02h,con_hh,0.3109,0.0053,100
ch02h,con_sqrt,0.2873,0.0054,100
ch02h,con_pc,0.3411,0.0061,100
ch02h,con_oecdm,0.2912,0.006,100
ch02h,con_ae,0.3069,0.0061,100
[1] "Loading dataset ch04h..."
ch04h,market_hh,0.4609,0.007,100
ch04h,market_sqrt,0.3983,0.0069,100
ch04h,market_pc,0.4457,0.0066,100
ch04h,market_oecdm,0.4007,0.0071,100
ch04h,market_ae,0.4154,0.0067,100
ch04h,gross_hh,0.3045,0.0047,100
ch04h,gross_sqrt,0.265,0.0049,100
ch04h,gross_pc,0.3156,0.0048,100
ch04h,gross_oecdm,0.2656,0.0048,100
ch04h,gross_ae,0.2807,0.0052,100
ch04h,disp_hh,0.3068,0.0048,100
ch04h,disp_sqrt,0.2677,0.0043,100
ch04h,disp_pc,0.3202,0.0055,100
ch04h,disp_oecdm,0.2686,0.0052,100
ch04h,disp_ae,0.2844,0.0055,100
ch04h,con_hh,0.3081,0.0046,100
ch04h,con_sqrt,0.2847,0.0057,100
ch04h,con_pc,0.3385,0.0056,100
ch04h,con_oecdm,0.2884,0.0058,100
ch04h,con_ae,0.3039,0.0057,100
[1] "Loading dataset ch06h..."
ch06h,market_hh,0.4585,0.0045,110
ch06h,market_sqrt,0.3984,0.0043,110
ch06h,market_pc,0.4351,0.0047,110
ch06h,market_oecdm,0.3997,0.0048,110
ch06h,market_ae,0.4109,0.0048,110
ch06h,gross_hh,0.3352,0.0037,110
ch06h,gross_sqrt,0.2951,0.0039,110
ch06h,gross_pc,0.3328,0.0038,110
ch06h,gross_oecdm,0.2946,0.0043,110
ch06h,gross_ae,0.3055,0.0031,110
ch06h,disp_hh,0.3371,0.0043,110
ch06h,disp_sqrt,0.3001,0.0047,110
ch06h,disp_pc,0.3388,0.0038,110
ch06h,disp_oecdm,0.2995,0.0039,110
ch06h,disp_ae,0.3109,0.0042,110
ch06h,con_hh,NaN,NA,110
ch06h,con_sqrt,NaN,NA,110
ch06h,con_pc,NaN,NA,110
ch06h,con_oecdm,NaN,NA,110
ch06h,con_ae,NaN,NA,110
[1] "Loading dataset ch07h..."
ch07h,market_hh,0.4768,0.0054,110
ch07h,market_sqrt,0.4107,0.005,110
ch07h,market_pc,0.4468,0.0043,110
ch07h,market_oecdm,0.4136,0.0049,110
ch07h,market_ae,0.4241,0.0048,110
ch07h,gross_hh,0.3488,0.0042,110
ch07h,gross_sqrt,0.3037,0.0041,110
ch07h,gross_pc,0.3377,0.0045,110
ch07h,gross_oecdm,0.3041,0.0036,110
ch07h,gross_ae,0.3135,0.0038,110
ch07h,disp_hh,0.3507,0.0043,110
ch07h,disp_sqrt,0.3084,0.0043,110
ch07h,disp_pc,0.3436,0.0049,110
ch07h,disp_oecdm,0.3089,0.0045,110
ch07h,disp_ae,0.3188,0.0046,110
ch07h,con_hh,NaN,NA,110
ch07h,con_sqrt,NaN,NA,110
ch07h,con_pc,NaN,NA,110
ch07h,con_oecdm,NaN,NA,110
ch07h,con_ae,NaN,NA,110
[1] "Loading dataset ch08h..."
ch08h,market_hh,0.4824,0.0047,110
ch08h,market_sqrt,0.4147,0.0051,110
ch08h,market_pc,0.4523,0.0049,110
ch08h,market_oecdm,0.4184,0.0046,110
ch08h,market_ae,0.4292,0.0044,110
ch08h,gross_hh,0.3514,0.0039,110
ch08h,gross_sqrt,0.3042,0.0037,110
ch08h,gross_pc,0.3383,0.0042,110
ch08h,gross_oecdm,0.3054,0.0043,110
ch08h,gross_ae,0.3146,0.0038,110
ch08h,disp_hh,0.3524,0.004,110
ch08h,disp_sqrt,0.3066,0.0041,110
ch08h,disp_pc,0.3418,0.004,110
ch08h,disp_oecdm,0.3077,0.0042,110
ch08h,disp_ae,0.3173,0.0042,110
ch08h,con_hh,NaN,NA,110
ch08h,con_sqrt,NaN,NA,110
ch08h,con_pc,NaN,NA,110
ch08h,con_oecdm,NaN,NA,110
ch08h,con_ae,NaN,NA,110
[1] "Loading dataset ch09h..."
ch09h,market_hh,0.4873,0.0053,110
ch09h,market_sqrt,0.418,0.0052,110
ch09h,market_pc,0.4557,0.0043,110
ch09h,market_oecdm,0.4211,0.0044,110
ch09h,market_ae,0.4322,0.0053,110
ch09h,gross_hh,0.3448,0.0039,110
ch09h,gross_sqrt,0.2957,0.0042,110
ch09h,gross_pc,0.3287,0.0043,110
ch09h,gross_oecdm,0.2952,0.0038,110
ch09h,gross_ae,0.3044,0.0043,110
ch09h,disp_hh,0.3453,0.0045,110
ch09h,disp_sqrt,0.2972,0.0044,110
ch09h,disp_pc,0.3313,0.0043,110
ch09h,disp_oecdm,0.2965,0.0043,110
ch09h,disp_ae,0.3061,0.0049,110
ch09h,con_hh,NaN,NA,110
ch09h,con_sqrt,NaN,NA,110
ch09h,con_pc,NaN,NA,110
ch09h,con_oecdm,NaN,NA,110
ch09h,con_ae,NaN,NA,110
[1] "Loading dataset ch10h..."
ch10h,market_hh,0.4841,0.0047,110
ch10h,market_sqrt,0.4152,0.0058,110
ch10h,market_pc,0.4496,0.0052,110
ch10h,market_oecdm,0.4174,0.0047,110
ch10h,market_ae,0.4274,0.0047,110
ch10h,gross_hh,0.3455,0.0049,110
ch10h,gross_sqrt,0.2948,0.0045,110
ch10h,gross_pc,0.3254,0.0045,110
ch10h,gross_oecdm,0.294,0.0045,110
ch10h,gross_ae,0.3021,0.005,110
ch10h,disp_hh,0.3465,0.0048,110
ch10h,disp_sqrt,0.297,0.0047,110
ch10h,disp_pc,0.3282,0.0044,110
ch10h,disp_oecdm,0.2961,0.0051,110
ch10h,disp_ae,0.3045,0.0048,110
ch10h,con_hh,NaN,NA,110
ch10h,con_sqrt,NaN,NA,110
ch10h,con_pc,NaN,NA,110
ch10h,con_oecdm,NaN,NA,110
ch10h,con_ae,NaN,NA,110
[1] "Loading dataset ch11h..."
ch11h,market_hh,0.4839,0.0044,110
ch11h,market_sqrt,0.4108,0.004,110
ch11h,market_pc,0.4458,0.0048,110
ch11h,market_oecdm,0.4136,0.0046,110
ch11h,market_ae,0.4237,0.0047,110
ch11h,gross_hh,0.3466,0.0039,110
ch11h,gross_sqrt,0.2927,0.0037,110
ch11h,gross_pc,0.3223,0.0041,110
ch11h,gross_oecdm,0.2923,0.0037,110
ch11h,gross_ae,0.3,0.004,110
ch11h,disp_hh,0.3416,0.0035,110
ch11h,disp_sqrt,0.2889,0.0042,110
ch11h,disp_pc,0.3201,0.0037,110
ch11h,disp_oecdm,0.2886,0.0042,110
ch11h,disp_ae,0.2968,0.0037,110
ch11h,con_hh,NaN,NA,110
ch11h,con_sqrt,NaN,NA,110
ch11h,con_pc,NaN,NA,110
ch11h,con_oecdm,NaN,NA,110
ch11h,con_ae,NaN,NA,110
[1] "Loading dataset ch12h..."
ch12h,market_hh,0.4889,0.0057,110
ch12h,market_sqrt,0.4128,0.0055,110
ch12h,market_pc,0.4486,0.0048,110
ch12h,market_oecdm,0.4164,0.0059,110
ch12h,market_ae,0.4266,0.0061,110
ch12h,gross_hh,0.3484,0.0046,110
ch12h,gross_sqrt,0.2911,0.0053,110
ch12h,gross_pc,0.3214,0.005,110
ch12h,gross_oecdm,0.2914,0.0049,110
ch12h,gross_ae,0.2992,0.0044,110
ch12h,disp_hh,0.3416,0.005,110
ch12h,disp_sqrt,0.2857,0.0048,110
ch12h,disp_pc,0.3189,0.0053,110
ch12h,disp_oecdm,0.2865,0.005,110
ch12h,disp_ae,0.2952,0.0053,110
ch12h,con_hh,NaN,NA,110
ch12h,con_sqrt,NaN,NA,110
ch12h,con_pc,NaN,NA,110
ch12h,con_oecdm,NaN,NA,110
ch12h,con_ae,NaN,NA,110
[1] "Loading dataset ch13h..."
ch13h,market_hh,0.4991,0.0051,110
ch13h,market_sqrt,0.4297,0.0068,110
ch13h,market_pc,0.4624,0.005,110
ch13h,market_oecdm,0.4325,0.006,110
ch13h,market_ae,0.4416,0.0064,110
ch13h,gross_hh,0.3534,0.0065,110
ch13h,gross_sqrt,0.3012,0.0058,110
ch13h,gross_pc,0.3309,0.0054,110
ch13h,gross_oecdm,0.3009,0.0058,110
ch13h,gross_ae,0.3085,0.0055,110
ch13h,disp_hh,0.3473,0.0046,110
ch13h,disp_sqrt,0.2961,0.0056,110
ch13h,disp_pc,0.3283,0.0058,110
ch13h,disp_oecdm,0.2963,0.006,110
ch13h,disp_ae,0.3046,0.0059,110
ch13h,con_hh,NaN,NA,110
ch13h,con_sqrt,NaN,NA,110
ch13h,con_pc,NaN,NA,110
ch13h,con_oecdm,NaN,NA,110
ch13h,con_ae,NaN,NA,110
[1] "Loading dataset ch14h..."
ch14h,market_hh,0.4981,0.0049,110
ch14h,market_sqrt,0.43,0.0057,110
ch14h,market_pc,0.4629,0.0045,110
ch14h,market_oecdm,0.4322,0.0051,110
ch14h,market_ae,0.4414,0.0056,110
ch14h,gross_hh,0.3535,0.0045,110
ch14h,gross_sqrt,0.3002,0.0041,110
ch14h,gross_pc,0.3305,0.0049,110
ch14h,gross_oecdm,0.2995,0.0049,110
ch14h,gross_ae,0.3072,0.0051,110
ch14h,disp_hh,0.3515,0.0038,110
ch14h,disp_sqrt,0.2988,0.0047,110
ch14h,disp_pc,0.3304,0.0045,110
ch14h,disp_oecdm,0.2982,0.0048,110
ch14h,disp_ae,0.3063,0.005,110
ch14h,con_hh,NaN,NA,110
ch14h,con_sqrt,NaN,NA,110
ch14h,con_pc,NaN,NA,110
ch14h,con_oecdm,NaN,NA,110
ch14h,con_ae,NaN,NA,110
[1] "Loading dataset ch15h..."
ch15h,market_hh,0.5053,0.0054,110
ch15h,market_sqrt,0.4349,0.0061,110
ch15h,market_pc,0.4673,0.0057,110
ch15h,market_oecdm,0.4366,0.0057,110
ch15h,market_ae,0.4458,0.0061,110
ch15h,gross_hh,0.3512,0.0052,110
ch15h,gross_sqrt,0.2976,0.005,110
ch15h,gross_pc,0.327,0.0056,110
ch15h,gross_oecdm,0.296,0.0059,110
ch15h,gross_ae,0.3037,0.0059,110
ch15h,disp_hh,0.3494,0.0071,110
ch15h,disp_sqrt,0.2969,0.0062,110
ch15h,disp_pc,0.3283,0.0062,110
ch15h,disp_oecdm,0.2957,0.0069,110
ch15h,disp_ae,0.304,0.0067,110
ch15h,con_hh,NaN,NA,110
ch15h,con_sqrt,NaN,NA,110
ch15h,con_pc,NaN,NA,110
ch15h,con_oecdm,NaN,NA,110
ch15h,con_ae,NaN,NA,110
[1] "Loading dataset ch16h..."
ch16h,market_hh,0.5048,0.0049,110
ch16h,market_sqrt,0.4355,0.0049,110
ch16h,market_pc,0.4692,0.0057,110
ch16h,market_oecdm,0.4372,0.0054,110
ch16h,market_ae,0.4469,0.0055,110
ch16h,gross_hh,0.3543,0.0046,110
ch16h,gross_sqrt,0.301,0.005,110
ch16h,gross_pc,0.331,0.0044,110
ch16h,gross_oecdm,0.2993,0.0044,110
ch16h,gross_ae,0.3072,0.0044,110
ch16h,disp_hh,0.3525,0.005,110
ch16h,disp_sqrt,0.301,0.0055,110
ch16h,disp_pc,0.3331,0.0049,110
ch16h,disp_oecdm,0.2998,0.0056,110
ch16h,disp_ae,0.3083,0.0055,110
ch16h,con_hh,NaN,NA,110
ch16h,con_sqrt,NaN,NA,110
ch16h,con_pc,NaN,NA,110
ch16h,con_oecdm,NaN,NA,110
ch16h,con_ae,NaN,NA,110
[1] "Loading dataset ch17h..."
ch17h,market_hh,0.5032,0.006,110
ch17h,market_sqrt,0.4354,0.007,110
ch17h,market_pc,0.4685,0.0066,110
ch17h,market_oecdm,0.4366,0.0073,110
ch17h,market_ae,0.4463,0.0066,110
ch17h,gross_hh,0.3547,0.0064,110
ch17h,gross_sqrt,0.3016,0.0053,110
ch17h,gross_pc,0.3311,0.0066,110
ch17h,gross_oecdm,0.2998,0.0067,110
ch17h,gross_ae,0.3076,0.0065,110
ch17h,disp_hh,0.3527,0.0052,110
ch17h,disp_sqrt,0.3012,0.0073,110
ch17h,disp_pc,0.3322,0.0062,110
ch17h,disp_oecdm,0.2998,0.0068,110
ch17h,disp_ae,0.308,0.007,110
ch17h,con_hh,NaN,NA,110
ch17h,con_sqrt,NaN,NA,110
ch17h,con_pc,NaN,NA,110
ch17h,con_oecdm,NaN,NA,110
ch17h,con_ae,NaN,NA,110
[1] "Loading dataset ch18h..."
ch18h,market_hh,0.5064,0.0052,110
ch18h,market_sqrt,0.4357,0.006,110
ch18h,market_pc,0.4662,0.0059,110
ch18h,market_oecdm,0.4357,0.0071,110
ch18h,market_ae,0.4447,0.0061,110
ch18h,gross_hh,0.3523,0.0052,110
ch18h,gross_sqrt,0.2988,0.0055,110
ch18h,gross_pc,0.3247,0.0054,110
ch18h,gross_oecdm,0.2954,0.0054,110
ch18h,gross_ae,0.3021,0.0053,110
ch18h,disp_hh,0.3532,0.0048,110
ch18h,disp_sqrt,0.3015,0.0063,110
ch18h,disp_pc,0.3282,0.0051,110
ch18h,disp_oecdm,0.2982,0.0059,110
ch18h,disp_ae,0.3053,0.0063,110
ch18h,con_hh,NaN,NA,110
ch18h,con_sqrt,NaN,NA,110
ch18h,con_pc,NaN,NA,110
ch18h,con_oecdm,NaN,NA,110
ch18h,con_ae,NaN,NA,110
[1] "Loading dataset ch19h..."
ch19h,market_hh,0.5115,0.0058,110
ch19h,market_sqrt,0.4436,0.0066,110
ch19h,market_pc,0.4769,0.0058,110
ch19h,market_oecdm,0.4449,0.0074,110
ch19h,market_ae,0.4547,0.0054,110
ch19h,gross_hh,0.3577,0.0047,110
ch19h,gross_sqrt,0.306,0.006,110
ch19h,gross_pc,0.3354,0.0055,110
ch19h,gross_oecdm,0.304,0.0055,110
ch19h,gross_ae,0.3119,0.0059,110
ch19h,disp_hh,0.3589,0.0058,110
ch19h,disp_sqrt,0.3099,0.0067,110
ch19h,disp_pc,0.3396,0.0061,110
ch19h,disp_oecdm,0.3077,0.006,110
ch19h,disp_ae,0.3158,0.0062,110
ch19h,con_hh,NaN,NA,110
ch19h,con_sqrt,NaN,NA,110
ch19h,con_pc,NaN,NA,110
ch19h,con_oecdm,NaN,NA,110
ch19h,con_ae,NaN,NA,110
> 
> proc.time()
   user  system elapsed 
156.137   0.451 161.785 


